# FIXME: This test is very inadequate.

m4_defun([check_brentroot],
[
AT_SETUP([$2])
#AT_KEYWORDS([auxiliary scheme python brentroot.h brentroot.scm brentroot unit])
AT_KEYWORDS([auxiliary brentroot.h brentroot unit])
AT_SKIP_IF([test x$1 = xskip -a x${DOING_INSTALLCHECK} = xyes])
AT_CHECK_UNQUOTED([
export LC_ALL="${posix_locale}"
export LTDL_LIBRARY_PATH="${abs_top_builddir}/scheme"
export GUILE_LOAD_PATH="${abs_top_builddir}/scheme:${abs_top_srcdir}/scheme"
$3$2],
[$4],[$5],[$6])
AT_CLEANUP
])

m4_defun([check_brentroot_c],
[
check_brentroot(
[skip],
[test_brentroot $1],
["${abs_builddir}"/],
[0],
[$2],
[])
])

m4_defun([check_brentroot_guile],
[
check_brentroot(
[],
[test_guile_brentroot.scm $1],
[${run_guile} "${abs_srcdir}"/],
[0],
[$2],
[])
])

m4_defun([check_brentroot_python],
[
check_brentroot(
[],
[test_python_brentroot.py $1],
[${PYTHON} "${abs_srcdir}"/],
[0],
[$2],
[])
])

m4_defun([check_qbrentroot_python],
[
check_brentroot(
[],
[test_python_qbrentroot.py $1],
[${PYTHON} "${abs_srcdir}"/],
[0],
[$2],
[])
])

check_brentroot_c([sin 0.1 3.0],[err = 1])
check_brentroot_c([sin -0.1 0.1],[err = 0, root = 0.000000, iter_no = 1])
check_brentroot_c([sin 3.0 3.5],[err = 0, root = 3.141593, iter_no = 5])
check_brentroot_c([sin 3.0 3.5 -1 0.1],[err = 0, root = 3.143443, iter_no = 2])

check_brentroot_guile([brentroot-values brentroot sin 0.1 3.0],[err = 1])
check_brentroot_guile([brentroot-values brentroot sin -0.1 0.1],[err = 0, root = 0.000000, iter_no = 1])
check_brentroot_guile([brentroot-values brentroot sin 3.0 3.5],[err = 0, root = 3.141593, iter_no = 5])

check_brentroot_guile([brentroot-values brentroot sin 3.0 3.5 2],[err = 2])
check_brentroot_guile([brentroot-values brentroot sin 3.0 3.5 -1 0.1],[err = 0, root = 3.143443, iter_no = 2])

check_brentroot_guile([brentroot-values brentroot '(lambda (x) (inexact->exact (sin x)))' 0.1 3],[err = 1])
check_brentroot_guile([brentroot-values brentroot '(lambda (x) (inexact->exact (sin x)))' -1/10 1/10],[err = 0, root = 0.000000, iter_no = 1, exact])
check_brentroot_guile([brentroot-values brentroot '(lambda (x) (inexact->exact (sin x)))' 3 7/2],[err = 0, root = 3.141593, iter_no = 5, exact])

check_brentroot_guile([brentroot-values brentroot '(lambda (x) (inexact->exact (sin x)))' 3 7/2 2],[err = 2])
check_brentroot_guile([brentroot-values brentroot '(lambda (x) (inexact->exact (sin x)))' 3 7/2 -1 0.1],[err = 0, root = 3.143443, iter_no = 2, exact])

check_brentroot_guile([flbrentroot-values flbrentroot sin 0.1 3.0],[err = 1])
check_brentroot_guile([flbrentroot-values flbrentroot sin -0.1 0.1],[err = 0, root = 0.000000, iter_no = 1])
check_brentroot_guile([flbrentroot-values flbrentroot sin 3.0 3.5],[err = 0, root = 3.141593, iter_no = 5])

check_brentroot_guile([flbrentroot-values flbrentroot sin 3.0 3.5 2],[err = 2])
check_brentroot_guile([flbrentroot-values flbrentroot sin 3.0 3.5 -1 0.1],[err = 0, root = 3.143443, iter_no = 2])

check_brentroot_python([math.sin 0.1 3.0],[err = 1])
check_brentroot_python([math.sin -0.1 0.1],[err = 0, root = 0.000000, iter_no = 1])
check_brentroot_python([math.sin 3.0 3.5],[err = 0, root = 3.141593, iter_no = 5])

check_brentroot_python([math.sin 3.0 3.5 2],[err = 2])
check_brentroot_python([math.sin 3.0 3.5 -1 0.1],[err = 0, root = 3.143443, iter_no = 2])

check_qbrentroot_python([math.sin 0.1 3.0],[err = 1])
check_qbrentroot_python([math.sin -0.1 0.1],[err = 0, root = 0.000000, iter_no = 1, exact])
check_qbrentroot_python([math.sin 3.0 3.5],[err = 0, root = 3.141593, iter_no = 5, exact])

check_qbrentroot_python([math.sin 3.0 3.5 2],[err = 2])
check_qbrentroot_python([math.sin 3.0 3.5 -1 0.1],[err = 0, root = 3.143443, iter_no = 2, exact])
