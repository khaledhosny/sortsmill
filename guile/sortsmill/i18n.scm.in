;; -*- mode: scheme; geiser-scheme-implementation: guile; coding: utf-8 -*-

;; Copyright (C) 2012, 2013 Barry Schwartz
;; 
;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3 of the License, or
;; (at your option) any later version.
;; 
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;; 
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, see <http://www.gnu.org/licenses/>.

(library
 (sortsmill i18n)

 (export ff_textdomain
         _ C_
         dgettext
         dpgettext)

 (import (rnrs)
         (except (guile) error)
         (system foreign))

 (define glib-dll (dynamic-link "libguile-sortsmill_aux"))

 (define ff_textdomain "@FF_TEXTDOMAIN@")

 (define (_ msg)
   (dgettext ff_textdomain msg))

 (define (C_ context msg)
   (dpgettext ff_textdomain
              (string-append context "\x04" msg)
              (+ 1 (string-length context))))

 (define dgettext
   (let ([proc (pointer->procedure
                '* (dynamic-func "g_dgettext" glib-dll)
                `(* *))])
     (lambda (domain msgid)
       (let ([domain^ (if domain (string->pointer domain "UTF-8") %null-pointer)]
             [msgid^ (string->pointer msgid "UTF-8")])
         (pointer->string (proc domain^ msgid^))))))

 (define dpgettext
   (let ([proc (pointer->procedure
                '* (dynamic-func "g_dpgettext" glib-dll)
                `(* * ,size_t))])
     (lambda (domain msgctxtid msgidoffset)
       (let ([domain^ (if domain (string->pointer domain "UTF-8") %null-pointer)]
             [msgctxtid^ (string->pointer msgctxtid "UTF-8")])
         (pointer->string (proc domain^ msgctxtid^ msgidoffset))))))

 ) ;; end of library.
