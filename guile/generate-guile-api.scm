#! /usr/bin/env guile \ -*- mode: scheme; geiser-scheme-implementation: guile; coding: utf-8 -*-
--no-auto-compile -s
!#

;; Copyright (C) 2012 Khaled Hosny and Barry Schwartz
;; This file is part of the Sorts Mill Tools.
;; 
;; Sorts Mill Tools is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3 of the License, or
;; (at your option) any later version.
;; 
;; Sorts Mill Tools is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;; 
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, see <http://www.gnu.org/licenses/>.

(import (ff-internal generate-types)
        (sortsmill api-syntax)
        (rnrs)
        (ice-9 format)
        (ice-9 match)
        (ice-9 pretty-print)
        (only (srfi :26) cut))

(let-values
    (((command-name module-name instruction-sources)
      (match (command-line)
        [(command-name module-name)
         (values command-name module-name (list (current-input-port)))]
        [(command-name module-name . instruction-sources)
         (values command-name module-name instruction-sources)]
        [_ (error "Expected command-line arguments: module-name instruction-sources")])))
  (format #t ";; Generated by:\n")
  (format #t ";;\n")
  (format #t ";;    ~a \\\n" command-name)
  (format #t ";;       '~a' \\\n" module-name)
  (format #t ";;      ")
  (for-each (cut format #t " '~a'" <>) instruction-sources)
  (format #t "\n")
  (format #t ";;\n")
  (format #t "\n")
  (let ((instructions (read-instruction-sources instruction-sources)))
    (let-values (((exports defines)
                  (expand-api (map underscores->hyphens instructions))))
      (pretty-print
       `(library ,(call-with-input-string module-name read)
                 (export ,@exports)
                 (import (sortsmill core)
                         (sortsmill pkg-info package)
                         (rnrs)
                         (system foreign)
                         (ice-9 format))
                 ,@defines)))))
