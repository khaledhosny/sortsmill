    .ti = {
      .text = (uint32_t *) N_("Font|_New"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'N'},
    .ti = {
      .text = (uint32_t *) N_("Font|_New"),
      .image = (GImage *) "filenew.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'N'},
    .shortcut = H_ ("New|Ctl+N"),
    .invoke = MenuNew,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Open"),
      .image = (GImage *) "fileopen.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'O'},
    .shortcut = H_ ("Open|Ctl+O"),
    .invoke = MenuOpen,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Recen_t"),
      .image = (GImage *) "filerecent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 't'},
    .sub = dummyitem,
    .moveto = MenuRecentBuild,
    .mid = MID_Recent},
    .ti = {
      .text = (uint32_t *) N_("_Close"),
      .image = (GImage *) "fileclose.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Close|Ctl+Shft+Q"),
    .invoke = FVMenuClose,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Save"),
      .image = (GImage *) "filesave.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'S'},
    .shortcut = H_ ("Save|Ctl+S"),
    .invoke = FVMenuSave,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("S_ave as..."),
      .image = (GImage *) "filesaveas.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'a'},
    .shortcut = H_ ("Save as...|Ctl+Shft+S"),
    .invoke = FVMenuSaveAs,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Save A_ll"),
      .image = (GImage *) "filesaveall.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .shortcut = H_ ("Save All|Alt+Ctl+S"),
    .invoke = MenuSaveAll,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Generate Fonts..."),
      .image = (GImage *) "filegenerate.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'G'},
    .shortcut = H_ ("Generate Fonts...|Ctl+Shft+G"),
    .invoke = FVMenuGenerate,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Generate Mac _Family..."),
      .image = (GImage *) "filegeneratefamily.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Generate Mac Family...|Alt+Ctl+G"),
    .invoke = FVMenuGenerateFamily,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Generate TTC..."),
      .image = (GImage *) "filegeneratefamily.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Generate TTC...|No Shortcut"),
    .invoke = FVMenuGenerateTTC,
    .mid = MID_GenerateTTC},
    .ti = {
      .text = (uint32_t *) N_("_Import..."),
      .image = (GImage *) "fileimport.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Import...|Ctl+Shft+I"),
    .invoke = FVMenuImport,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Merge Feature Info..."),
      .image = (GImage *) "filemergefeature.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'M'},
    .shortcut = H_ ("Merge Kern Info...|Alt+Ctl+Shft+K"),
    .invoke = FVMenuMergeKern,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Revert File"),
      .image = (GImage *) "filerevert.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Revert File|Ctl+Shft+R"),
    .invoke = FVMenuRevert,
    .mid = MID_Revert},
    .ti = {
      .text = (uint32_t *) N_("Revert To _Backup"),
      .image = (GImage *) "filerevertbackup.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Revert To Backup|No Shortcut"),
    .invoke = FVMenuRevertBackup,
    .mid = MID_RevertToBackup},
    .ti = {
      .text = (uint32_t *) N_("Revert Gl_yph"),
      .image = (GImage *) "filerevertglyph.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Revert Glyph|Alt+Ctl+R"),
    .invoke = FVMenuRevertGlyph,
    .mid = MID_RevertGlyph},
    .ti = {
      .text = (uint32_t *) N_("_Print..."),
      .image = (GImage *) "fileprint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Print...|Ctl+P"),
    .invoke = FVMenuPrint,
    .mid = MID_Print},
    .ti = {
      .text = (uint32_t *) N_("E_xecute Script..."),
      .image = (GImage *) "python.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'x'},
    .shortcut = H_ ("Execute Script...|Ctl+."),
    .invoke = FVMenuExecute,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Pr_eferences..."),
      .image = (GImage *) "fileprefs.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'e'},
    .shortcut = H_ ("Preferences...|No Shortcut"),
    .invoke = MenuPrefs,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_X Resource Editor..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'e'},
    .shortcut = H_ ("X Resource Editor...|No Shortcut"),
    .invoke = MenuXRes,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Quit"),
      .image = (GImage *) "filequit.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'Q'},
    .shortcut = H_ ("Quit|Ctl+Q"),
    .invoke = FVMenuExit,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_All Fonts"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'A'},
    .shortcut = H_ ("All Fonts|No Shortcut"),
    .invoke = FVMenuCopyFrom,
    .mid = MID_AllFonts},
    .ti = {
      .text = (uint32_t *) N_("_Displayed Font"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'D'},
    .shortcut = H_ ("Displayed Font|No Shortcut"),
    .invoke = FVMenuCopyFrom,
    .mid = MID_DisplayedFont},
    .ti = {
      .text = (uint32_t *) N_("Glyph _Metadata"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'N'},
    .shortcut = H_ ("Glyph Metadata|No Shortcut"),
    .invoke = FVMenuCopyFrom,
    .mid = MID_CharName},
    .ti = {
      .text = (uint32_t *) N_("_TrueType Instructions"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'N'},
    .shortcut = H_ ("TrueType Instructions|No Shortcut"),
    .invoke = FVMenuCopyFrom,
    .mid = MID_TTFInstr},
    .ti = {
      .text = (uint32_t *) N_("Color|Choose..."),
      .image = (GImage *) "colorwheel.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) -10,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Color Choose|No Shortcut"),
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Color|Default"),
      .image = (GImage *) "colordef.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Default|No Shortcut"),
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorwhite.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0xffffff,
      .image_precedes = true,
      .mnemonic = '\0'},
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorred.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0xff0000,
      .image_precedes = true,
      .mnemonic = '\0'},
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorgreen.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0x00ff00,
      .image_precedes = true,
      .mnemonic = '\0'},
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorblue.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0x0000ff,
      .image_precedes = true
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "coloryellow.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0xffff00,
      .image_precedes = true
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorcyan.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0x00ffff,
      .image_precedes = true
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colormagenta.png",
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .userdata = (void *) 0xff00ff,
      .image_precedes = true
    .invoke = FVMenuSelectColor,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Select _All"),
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'A'},
    .shortcut = H_ ("Select All|Ctl+A"),
    .invoke = FVMenuSelectAll,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Invert Selection"),
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Invert Selection|Ctl+Escape"),
    .invoke = FVMenuInvertSelection,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Deselect All"),
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Deselect All|Escape"),
    .invoke = FVMenuDeselectAll,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Select by _Color"),
      .bg = COLOR_DEFAULT,
      .fg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true
    .shortcut = H_ ("Select by Color|No Shortcut"),
    .sub = sclist,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Select by _Wildcard..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true
    .shortcut = H_ ("Select by Wildcard...|No Shortcut"),
    .invoke = FVMenuSelectByName,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Select by _Script..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true
    .shortcut = H_ ("Select by Script...|No Shortcut"),
    .invoke = FVMenuSelectByScript,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Glyphs Worth Outputting"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true
    .shortcut = H_ ("Glyphs Worth Outputting|No Shortcut"),
    .invoke = FVMenuSelectWorthOutputting,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Glyphs with only _References"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Glyphs with only References|No Shortcut"),
    .invoke = FVMenuGlyphsRefs,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Glyphs with only S_plines"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Glyphs with only Splines|No Shortcut"),
    .invoke = FVMenuGlyphsSplines,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Glyphs with both"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Glyphs with both|No Shortcut"),
    .invoke = FVMenuGlyphsBoth,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("W_hitespace Glyphs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Whitespace Glyphs|No Shortcut"),
    .invoke = FVMenuGlyphsWhite,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Changed Glyphs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Changed Glyphs|No Shortcut"),
    .invoke = FVMenuSelectChanged,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Hinting Needed"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Hinting Needed|No Shortcut"),
    .invoke = FVMenuSelectHintingNeeded,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Autohinta_ble"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Autohintable|No Shortcut"),
    .invoke = FVMenuSelectAutohintable,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Hold [Shift] key to merge"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .ti = {
      .text = (uint32_t *) N_("Hold [Control] key to restrict"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .ti = {
      .text = (uint32_t *) N_("Selec_t By Lookup Subtable..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut = H_ ("Select By Lookup Subtable...|No Shortcut"),
    .invoke = FVMenuSelectByPST,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Undo"),
      .image = (GImage *) "editundo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'U'},
    .shortcut = H_ ("Undo|Ctl+Z"),
    .invoke = FVMenuUndo,
    .mid = MID_Undo},
    .ti = {
      .text = (uint32_t *) N_("_Redo"),
      .image = (GImage *) "editredo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Redo|Ctl+Y"),
    .invoke = FVMenuRedo,
    .mid = MID_Redo},
    .ti = {
      .text = (uint32_t *) N_("Cu_t"),
      .image = (GImage *) "editcut.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 't'},
    .shortcut = H_ ("Cut|Ctl+X"),
    .invoke = FVMenuCut,
    .mid = MID_Cut},
    .ti = {
      .text = (uint32_t *) N_("_Copy"),
      .image = (GImage *) "editcopy.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Copy|Ctl+C"),
    .invoke = FVMenuCopy,
    .mid = MID_Copy},
    .ti = {
      .text = (uint32_t *) N_("C_opy Reference"),
      .image = (GImage *) "editcopyref.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Copy Reference|Ctl+G"),
    .invoke = FVMenuCopyRef,
    .mid = MID_CopyRef},
    .ti = {
      .text = (uint32_t *) N_("Copy _Lookup Data"),
      .image = (GImage *) "editcopylookupdata.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Copy Lookup Data|Alt+Ctl+C"),
    .invoke = FVMenuCopyLookupData,
    .mid = MID_CopyLookupData},
    .ti = {
      .text = (uint32_t *) N_("Copy _Width"),
      .image = (GImage *) "editcopywidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'W'},
    .shortcut = H_ ("Copy Width|Ctl+W"),
    .invoke = FVMenuCopyWidth,
    .mid = MID_CopyWidth},
    .ti = {
      .text = (uint32_t *) N_("Copy _VWidth"),
      .image = (GImage *) "editcopyvwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .shortcut = H_ ("Copy VWidth|No Shortcut"),
    .invoke = FVMenuCopyWidth,
    .mid = MID_CopyVWidth},
    .ti = {
      .text = (uint32_t *) N_("Co_py LBearing"),
      .image = (GImage *) "editcopylbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'p'},
    .shortcut = H_ ("Copy LBearing|No Shortcut"),
    .invoke = FVMenuCopyWidth,
    .mid = MID_CopyLBearing},
    .ti = {
      .text = (uint32_t *) N_("Copy RBearin_g"),
      .image = (GImage *) "editcopyrbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'g'},
    .shortcut = H_ ("Copy RBearing|No Shortcut"),
    .invoke = FVMenuCopyWidth,
    .mid = MID_CopyRBearing},
    .ti = {
      .text = (uint32_t *) N_("_Paste"),
      .image = (GImage *) "editpaste.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Paste|Ctl+V"),
    .invoke = FVMenuPaste,
    .mid = MID_Paste},
    .ti = {
      .text = (uint32_t *) N_("Paste Into"),
      .image = (GImage *) "editpasteinto.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Paste Into|Ctl+Shft+V"),
    .invoke = FVMenuPasteInto,
    .mid = MID_PasteInto},
    .ti = {
      .text = (uint32_t *) N_("Paste After"),
      .image = (GImage *) "editpasteafter.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Paste After|Alt+Ctl+Shft+V"),
    .invoke = FVMenuPasteAfter,
    .mid = MID_PasteAfter},
    .ti = {
      .text = (uint32_t *) N_("Sa_me Glyph As"),
      .image = (GImage *) "editsameas.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'm'},
    .shortcut = H_ ("Same Glyph As|No Shortcut"),
    .invoke = FVMenuSameGlyphAs,
    .mid = MID_SameGlyphAs},
    .ti = {
      .text = (uint32_t *) N_("C_lear"),
      .image = (GImage *) "editclear.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .shortcut = H_ ("Clear|No Shortcut"),
    .invoke = FVMenuClear,
    .mid = MID_Clear},
    .ti = {
      .text = (uint32_t *) N_("Clear _Background"),
      .image = (GImage *) "editclearback.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Clear Background|No Shortcut"),
    .invoke = FVMenuClearBackground,
    .mid = MID_ClearBackground},
    .ti = {
      .text = (uint32_t *) N_("Copy _Fg To Bg"),
      .image = (GImage *) "editcopyfg2bg.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Copy Fg To Bg|Ctl+Shft+C"),
    .invoke = FVMenuCopyFgBg,
    .mid = MID_CopyFgToBg},
    .ti = {
      .text = (uint32_t *) N_("Copy Layer To Layer"),
      .image = (GImage *) "editcopylayer2layer.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Copy Layer To Layer|No Shortcut"),
    .invoke = FVMenuCopyL2L,
    .mid = MID_CopyL2L},
    .ti = {
      .text = (uint32_t *) N_("_Join"),
      .image = (GImage *) "editjoin.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'J'},
    .shortcut = H_ ("Join|Ctl+Shft+J"),
    .invoke = FVMenuJoin,
    .mid = MID_Join},
    .ti = {
      .text = (uint32_t *) N_("_Select"),
      .image = (GImage *) "editselect.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'S'},
    .sub = sllist,
    .moveto = sllistcheck_fv,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("F_ind / Replace..."),
      .image = (GImage *) "editfind.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'i'},
    .shortcut = H_ ("Find / Replace...|Alt+Ctl+F"),
    .invoke = FVMenuFindRpl,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Replace with Reference"),
      .image = (GImage *) "editrplref.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'i'},
    .shortcut = H_ ("Replace with Reference|Alt+Ctl+Shft+F"),
    .invoke = FVMenuReplaceWithRef,
    .mid = MID_RplRef},
    .ti = {
      .text = (uint32_t *) N_("Correct References"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'i'},
    .shortcut = H_ ("Correct References|No Shortcut"),
    .invoke = FVMenuCorrectRefs,
    .mid = MID_CorrectRefs},
    .ti = {
      .text = (uint32_t *) N_("U_nlink Reference"),
      .image = (GImage *) "editunlink.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'U'},
    .shortcut = H_ ("Unlink Reference|Ctl+U"),
    .invoke = FVMenuUnlinkRef,
    .mid = MID_UnlinkRef},
    .ti = {
      .text = (uint32_t *) N_("Copy _From"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .sub = cflist,
    .moveto = cflistcheck_fv,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Remo_ve Undoes"),
      .image = (GImage *) "editrmundoes.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'e'},
    .shortcut = H_ ("Remove Undoes|No Shortcut"),
    .invoke = FVMenuRemoveUndoes,
    .mid = MID_RemoveUndoes},
    .ti = {
      .text = (uint32_t *) N_("_Simplify"),
      .image = (GImage *) "elementsimplify.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'S'},
    .shortcut = H_ ("Simplify|Ctl+Shft+M"),
    .invoke = FVMenuSimplify,
    .mid = MID_Simplify},
    .ti = {
      .text = (uint32_t *) N_("Simplify More..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'M'},
    .shortcut = H_ ("Simplify More...|Alt+Ctl+Shft+M"),
    .invoke = FVMenuSimplifyMore,
    .mid = MID_SimplifyMore},
    .ti = {
      .text = (uint32_t *) N_("Clea_nup Glyph"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'n'},
    .shortcut = H_ ("Cleanup Glyph|No Shortcut"),
    .invoke = FVMenuCleanup,
    .mid = MID_CleanupGlyph},
    .ti = {
      .text = (uint32_t *) N_("Canonical Start _Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'n'},
    .shortcut = H_ ("Canonical Start Point|No Shortcut"),
    .invoke = FVMenuCanonicalStart,
    .mid = MID_CanonicalStart},
    .ti = {
      .text = (uint32_t *) N_("Canonical _Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'n'},
    .shortcut = H_ ("Canonical Contours|No Shortcut"),
    .invoke = FVMenuCanonicalContours,
    .mid = MID_CanonicalContours},
    .ti = {
      .text = (uint32_t *) N_("_Remove Overlap"),
      .image = (GImage *) "overlaprm.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'O'},
    .shortcut = H_ ("Remove Overlap|Ctl+Shft+O"),
    .invoke = FVMenuOverlap,
    .mid = MID_RmOverlap},
    .ti = {
      .text = (uint32_t *) N_("_Intersect"),
      .image = (GImage *) "overlapintersection.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Intersect|No Shortcut"),
    .invoke = FVMenuOverlap,
    .mid = MID_Intersection},
    .ti = {
      .text = (uint32_t *) N_("_Find Intersections"),
      .image = (GImage *) "overlapfindinter.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'O'},
    .shortcut = H_ ("Find Intersections|No Shortcut"),
    .invoke = FVMenuOverlap,
    .mid = MID_FindInter},
    .ti = {
      .text = (uint32_t *) N_("Change _Weight..."),
      .image = (GImage *) "styleschangeweight.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Change Weight...|Ctl+Shft+!"),
    .invoke = FVMenuEmbolden,
    .mid = MID_Embolden},
    .ti = {
      .text = (uint32_t *) N_("_Italic..."),
      .image = (GImage *) "stylesitalic.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Italic...|No Shortcut"),
    .invoke = FVMenuItalic,
    .mid = MID_Italic},
    .ti = {
      .text = (uint32_t *) N_("Obli_que..."),
      .image = (GImage *) "stylesoblique.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Oblique...|No Shortcut"),
    .invoke = FVMenuOblique,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Condense/Extend..."),
      .image = (GImage *) "stylesextendcondense.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Condense...|No Shortcut"),
    .invoke = FVMenuCondense,
    .mid = MID_Condense},
    .ti = {
      .text = (uint32_t *) N_("Change _X-Height..."),
      .image = (GImage *) "styleschangexheight.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Change XHeight...|No Shortcut"),
    .invoke = FVMenuChangeXHeight,
    .mid = MID_ChangeXHeight},
    .ti = {
      .text = (uint32_t *) N_("Change _Glyph..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Change Glyph...|No Shortcut"),
    .invoke = FVMenuChangeGlyph,
    .mid = MID_ChangeGlyph},
    .ti = {
      .text = (uint32_t *) N_("Add _Small Capitals..."),
      .image = (GImage *) "stylessmallcaps.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Add Small Caps...|No Shortcut"),
    .invoke = FVMenuSmallCaps,
    .mid = MID_SmallCaps},
    .ti = {
      .text = (uint32_t *) N_("Add Subscripts/Superscripts..."),
      .image = (GImage *) "stylessubsuper.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Add Subscripts/Superscripts...|No Shortcut"),
    .invoke = FVMenuSubSup,
    .mid = MID_SubSup},
    .ti = {
      .text = (uint32_t *) N_("In_line..."),
      .image = (GImage *) "stylesinline.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Inline|No Shortcut"),
    .invoke = FVMenuInline,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Outline..."),
      .image = (GImage *) "stylesoutline.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Outline|No Shortcut"),
    .invoke = FVMenuOutline,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("S_hadow..."),
      .image = (GImage *) "stylesshadow.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Shadow|No Shortcut"),
    .invoke = FVMenuShadow,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Wireframe..."),
      .image = (GImage *) "styleswireframe.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Wireframe|No Shortcut"),
    .invoke = FVMenuWireframe,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Build Accented Glyph"),
      .image = (GImage *) "elementbuildaccent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Build Accented Glyph|Ctl+Shft+A"),
    .invoke = FVMenuBuildAccent,
    .mid = MID_BuildAccent},
    .ti = {
      .text = (uint32_t *) N_("Build _Composite Glyph"),
      .image = (GImage *) "elementbuildcomposite.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Build Composite Glyph|No Shortcut"),
    .invoke = FVMenuBuildComposite,
    .mid = MID_BuildComposite},
    .ti = {
      .text = (uint32_t *) N_("Buil_d Duplicate Glyph"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Build Duplicate Glyph|No Shortcut"),
    .invoke = FVMenuBuildDuplicate,
    .mid = MID_BuildDuplicates},
    .ti = {
      .text = (uint32_t *) _STR_ShowGrp,
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .invoke = FVMenuShowGroup},
    .ti = {
      .text = (uint32_t *) N_("_References..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'u'},
    .shortcut = H_ ("References...|Alt+Ctl+I"),
    .invoke = FVMenuShowDependentRefs,
    .mid = MID_ShowDependentRefs},
    .ti = {
      .text = (uint32_t *) N_("_Substitutions..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Substitutions...|No Shortcut"),
    .invoke = FVMenuShowDependentSubs,
    .mid = MID_ShowDependentSubs},
    .ti = {
      .text = (uint32_t *) N_("_Transform..."),
      .image = (GImage *) "elementtransform.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut = H_ ("Transform...|Ctl+\\"),
    .invoke = FVMenuTransform,
    .mid = MID_Transform},
    .ti = {
      .text = (uint32_t *) N_("_Point of View Projection..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut = H_ ("Point of View Projection...|Ctl+Shft+<"),
    .invoke = FVMenuPOV,
    .mid = MID_POV},
    .ti = {
      .text = (uint32_t *) N_("_Non Linear Transform..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut = H_ ("Non Linear Transform...|Ctl+Shft+|"),
    .invoke = FVMenuNLTransform,
    .mid = MID_NLTransform},
    .ti = {
      .text = (uint32_t *) N_("To _Int"),
      .image = (GImage *) "elementround.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("To Int|Ctl+Shft+_"),
    .invoke = FVMenuRound2Int,
    .mid = MID_Round},
    .ti = {
      .text = (uint32_t *) N_("To _Hundredths"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("To Hundredths|No Shortcut"),
    .invoke = FVMenuRound2Hundredths,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Cluster"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Cluster|No Shortcut"),
    .invoke = FVMenuCluster,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Color|Choose..."),
      .image = (GImage *) "colorwheel.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) -10,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Color Choose|No Shortcut"),
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Color|Default"),
      .image = (GImage *) "colordef.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Default|No Shortcut"),
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorwhite.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0xffffff,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorred.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0xff0000,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorgreen.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata  =(void *) 0x00ff00,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorblue.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0x0000ff,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "coloryellow.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0xffff00,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colorcyan.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0x00ffff,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .image = (GImage *) "colormagenta.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0xff00ff,
      .image_precedes = true
    .invoke = FVMenuSetColor,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_MATH Info..."),
      .image = (GImage *) "elementmathinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("MATH Info...|No Shortcut"),
    .invoke = FVMenuMATHInfo,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_BDF Info..."),
      .image = (GImage *) "elementbdfinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("BDF Info...|No Shortcut"),
    .invoke = FVMenuBDFInfo,
    .mid = MID_StrikeInfo},
    .ti = {
      .text = (uint32_t *) N_("_Horizontal Baselines..."),
      .image = (GImage *) "elementhbaselines.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Horizontal Baselines...|No Shortcut"),
    .invoke = FVMenuBaseHoriz,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Vertical Baselines..."),
      .image = (GImage *) "elementvbaselines.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Vertical Baselines...|No Shortcut"),
    .invoke = FVMenuBaseVert,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Justification..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Justification...|No Shortcut"),
    .invoke = FVMenuJustify,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Show _Dependent"),
      .image = (GImage *) "elementshowdep.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .sub = delist,
    .moveto = delistcheck_fv,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Mass Glyph _Rename..."),
      .image = (GImage *) "elementrenameglyph.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Mass Glyph Rename...|No Shortcut"),
    .invoke = FVMenuMassRename,
    .mid = MID_MassRename},
    .ti = {
      .text = (uint32_t *) N_("Set _Color"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Set Color|No Shortcut"),
    .sub = scollist,
    .mid = MID_SetColor},
    .ti = {
      .text = (uint32_t *) N_("Find Pr_oblems..."),
      .image = (GImage *) "elementfindprobs.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Find Problems...|Ctl+E"),
    .invoke = FVMenuFindProblems,
    .mid = MID_FindProblems},
    .ti = {
      .text = (uint32_t *) N_("_Validate..."),
      .image = (GImage *) "elementvalidate.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Validate...|No Shortcut"),
    .invoke = FVMenuValidate,
    .mid = MID_Validate},
    .ti = {
      .text = (uint32_t *) N_("Set E_xtremum Bound..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Set Extremum bound...|No Shortcut"),
    .invoke = FVMenuSetExtremumBound,
    .mid = MID_SetExtremumBound},
    .ti = {
      .text = (uint32_t *) N_("_Font Info..."),
      .image = (GImage *) "elementfontinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Font Info...|Ctl+Shft+F"),
    .invoke = FVMenuFontInfo,
    .mid = MID_FontInfo},
    .ti = {
      .text = (uint32_t *) N_("_Glyph Info..."),
      .image = (GImage *) "elementglyphinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Glyph Info...|Ctl+I"),
    .invoke = FVMenuCharInfo,
    .mid = MID_CharInfo},
    .ti = {
      .text = (uint32_t *) N_("Other Info"),
      .image = (GImage *) "elementotherinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .sub = infolist,
    .moveto = infolistcheck_fv,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Validation"),
      .image = (GImage *) "elementvalidate.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .sub = validlist,
    .moveto = validlistcheck_fv,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Bitm_ap Strikes Available..."),
      .image = (GImage *) "elementbitmapsavail.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'A'},
    .shortcut = H_ ("Bitmap Strikes Available...|Ctl+Shft+B"),
    .invoke = FVMenuBitmaps,
    .mid = MID_AvailBitmaps},
    .ti = {
      .text = (uint32_t *) N_("Regenerate _Bitmap Glyphs..."),
      .image = (GImage *) "elementregenbitmaps.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Regenerate Bitmap Glyphs...|Ctl+B"),
    .invoke = FVMenuBitmaps,
    .mid = MID_RegenBitmaps},
    .ti = {
      .text = (uint32_t *) N_("Remove Bitmap Glyphs..."),
      .image = (GImage *) "elementremovebitmaps.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Remove Bitmap Glyphs...|No Shortcut"),
    .invoke = FVMenuBitmaps,
    .mid = MID_RemoveBitmaps},
    .ti = {
      .text = (uint32_t *) N_("St_yle"),
      .image = (GImage *) "elementstyles.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'S'},
    .sub = eflist,
    .mid = MID_Styles},
    .ti = {
      .text = (uint32_t *) N_("_Transformations"),
      .image = (GImage *) "elementtransform.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .sub = trlist,
    .moveto = trlistcheck_fv,
    .mid = MID_Transform},
    .ti = {
      .text = (uint32_t *) N_("_Expand Stroke..."),
      .image = (GImage *) "elementexpandstroke.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'E'},
    .shortcut = H_ ("Expand Stroke...|Ctl+Shft+E"),
    .invoke = FVMenuStroke,
    .mid = MID_Stroke},
    .ti = {
      .text = (uint32_t *) N_("Tile _Path..."),
      .image = (GImage *) "elementtilepath.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Tile Path...|No Shortcut"),
    .invoke = FVMenuTilePath,
    .mid = MID_TilePath},
    .ti = {
      .text = (uint32_t *) N_("Tile Pattern..."),
      .image = (GImage *) "elementtilepattern.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Tile Pattern...|No Shortcut"),
    .invoke = FVMenuPatternTile,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("O_verlap"),
      .image = (GImage *) "overlaprm.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'O'},
    .sub = rmlist,
    .mid = MID_RmOverlap},
    .ti = {
      .text = (uint32_t *) N_("_Simplify"),
      .image = (GImage *) "elementsimplify.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'S'},
    .sub = smlist,
    .mid = MID_Simplify},
    .ti = {
      .text = (uint32_t *) N_("Add E_xtrema"),
      .image = (GImage *) "elementaddextrema.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'x'},
    .shortcut = H_ ("Add Extrema|Ctl+Shft+X"),
    .invoke = FVMenuAddExtrema,
    .mid = MID_AddExtrema},
    .ti = {
      .text = (uint32_t *) N_("Roun_d"),
      .image = (GImage *) "elementround.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .sub = rndlist,
    .mid = MID_Round},
    .ti = {
      .text = (uint32_t *) N_("Autot_race"),
      .image = (GImage *) "elementautotrace.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'r'},
    .shortcut = H_ ("Autotrace|Ctl+Shft+T"),
    .invoke = FVMenuAutotrace,
    .mid = MID_Autotrace},
    .ti = {
      .text = (uint32_t *) N_("_Correct Direction"),
      .image = (GImage *) "elementcorrectdir.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'D'},
    .shortcut = H_ ("Correct Direction|Ctl+Shft+D"),
    .invoke = FVMenuCorrectDir,
    .mid = MID_Correct},
    .ti = {
      .text = (uint32_t *) N_("B_uild"),
      .image = (GImage *) "elementbuildaccent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .sub = balist,
    .moveto = balistcheck_fv,
    .mid = MID_BuildAccent},
    .ti = {
      .text = (uint32_t *) N_("_Merge Fonts..."),
      .image = (GImage *) "elementmergefonts.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'M'},
    .shortcut = H_ ("Merge Fonts...|No Shortcut"),
    .invoke = FVMenuMergeFonts,
    .mid = MID_MergeFonts},
    .ti = {
      .text = (uint32_t *) N_("Interpo_late Fonts..."),
      .image = (GImage *) "elementinterpolatefonts.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'p'},
    .shortcut = H_ ("Interpolate Fonts...|No Shortcut"),
    .invoke = FVMenuInterpFonts,
    .mid = MID_InterpolateFonts},
    .ti = {
      .text = (uint32_t *) N_("Compare Fonts..."),
      .image = (GImage *) "elementcomparefonts.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'p'},
    .shortcut = H_ ("Compare Fonts...|No Shortcut"),
    .invoke = FVMenuCompareFonts,
    .mid = MID_FontCompare},
    .ti = {
      .text = (uint32_t *) N_("Compare Layers..."),
      .image = (GImage *) "elementcomparelayers.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'p'},
    .shortcut = H_ ("Compare Layers...|No Shortcut"),
    .invoke = FVMenuCompareL2L,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("All"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("All|No Shortcut"),
    .ti = {
      .text = (uint32_t *) N_("_Kern Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("Kern Pairs|No Shortcut"),
    .invoke = FVMenuKernPairs,
    .mid = MID_KernPairs},
    .ti = {
      .text = (uint32_t *) N_("_Anchored Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("Anchored Pairs|No Shortcut"),
    .sub = dummyall,
    .moveto = aplistbuild_fv,
    .mid = MID_AnchorPairs},
    .ti = {
      .text = (uint32_t *) N_("_Ligatures"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'L'},
    .shortcut = H_ ("Ligatures|No Shortcut"),
    .invoke = FVMenuLigatures,
    .mid = MID_Ligatures},
    .ti = {
      .text = (uint32_t *) N_("_Glyph Image"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("Glyph Image|No Shortcut"),
    .invoke = FVMenuGlyphLabel,
    .mid = gl_glyph},
    .ti = {
      .text = (uint32_t *) N_("_Name"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("Name|No Shortcut"),
    .invoke = FVMenuGlyphLabel,
    .mid = gl_name},
    .ti = {
      .text = (uint32_t *) N_("_Unicode"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'L'},
    .shortcut = H_ ("Unicode|No Shortcut"),
    .invoke = FVMenuGlyphLabel,
    .mid = gl_unicode},
    .ti = {
      .text = (uint32_t *) N_("_Encoding Hex"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'L'},
    .shortcut = H_ ("Encoding Hex|No Shortcut"),
    .invoke = FVMenuGlyphLabel,
    .mid = gl_encoding},
    .ti = {
      .text = (uint32_t *) N_("_Reencode"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'E'},
    .shortcut = H_ ("Reencode|No Shortcut"),
    .sub = emptymenu,
    .moveto = FVEncodingMenuBuild,
    .mid = MID_Reencode},
    .ti = {
      .text = (uint32_t *) N_("_Compact"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Compact|No Shortcut"),
    .invoke = FVMenuCompact,
    .mid = MID_Compact},
    .ti = {
      .text = (uint32_t *) N_("_Force Encoding"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Force Encoding|No Shortcut"),
    .sub = emptymenu,
    .moveto = FVForceEncodingMenuBuild,
    .mid = MID_ForceReencode},
    .ti = {
      .text = (uint32_t *) N_("_Add Encoding Slots..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Add Encoding Slots...|No Shortcut"),
    .invoke = FVMenuAddUnencoded,
    .mid = MID_AddUnencoded},
    .ti = {
      .text = (uint32_t *) N_("Remove _Unused Slots"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Remove Unused Slots|No Shortcut"),
    .invoke = FVMenuRemoveUnused,
    .mid = MID_RemoveUnused},
    .ti = {
      .text = (uint32_t *) N_("_Detach Glyphs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Detach Glyphs|No Shortcut"),
    .invoke = FVMenuDetachGlyphs,
    .mid = MID_DetachGlyphs},
    .ti = {
      .text = (uint32_t *) N_("Detach & Remo_ve Glyphs..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Detach & Remove Glyphs...|No Shortcut"),
    .invoke = FVMenuDetachAndRemoveGlyphs,
    .mid = MID_DetachAndRemoveGlyphs},
    .ti = {
      .text = (uint32_t *) N_("Add E_ncoding Name..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Add Encoding Name...|No Shortcut"),
    .invoke = FVMenuAddEncodingName,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Load Encoding..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Load Encoding...|No Shortcut"),
    .invoke = FVMenuLoadEncoding,
    .mid = MID_LoadEncoding},
    .ti = {
      .text = (uint32_t *) N_("Ma_ke From Font..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Make From Font...|No Shortcut"),
    .invoke = FVMenuMakeFromFont,
    .mid = MID_MakeFromFont},
    .ti = {
      .text = (uint32_t *) N_("Remove En_coding..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Remove Encoding...|No Shortcut"),
    .invoke = FVMenuRemoveEncoding,
    .mid = MID_RemoveEncoding},
    .ti = {
      .text = (uint32_t *) N_("Display By _Groups..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Display By Groups...|No Shortcut"),
    .invoke = FVMenuDisplayByGroups,
    .mid = MID_DisplayByGroups},
    .ti = {
      .text = (uint32_t *) N_("D_efine Groups..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Define Groups...|No Shortcut"),
    .invoke = FVMenuDefineGroups,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Save Namelist of Font..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Save Namelist of Font...|No Shortcut"),
    .invoke = FVMenuMakeNamelist,
    .mid = MID_SaveNamelist},
    .ti = {
      .text = (uint32_t *) N_("L_oad Namelist..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Load Namelist...|No Shortcut"),
    .invoke = FVMenuLoadNamelist,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Rename Gl_yphs..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Rename Glyphs...|No Shortcut"),
    .invoke = FVMenuRenameByNamelist,
    .mid = MID_RenameGlyphs},
    .ti = {
      .text = (uint32_t *) N_("Cre_ate Named Glyphs..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Create Named Glyphs...|No Shortcut"),
    .invoke = FVMenuNameGlyphs,
    .mid = MID_NameGlyphs},
    .ti = {
      .text = (uint32_t *) N_("Layer|Foreground"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = true,
      .checkable = true,
      .checked = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true
    .invoke = FVMenuChangeLayer,
    .mid = ly_fore
    .ti = {
      .text = (uint32_t *) N_("_Next Glyph"),
      .image = (GImage *) "viewnext.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'N'},
    .shortcut = H_ ("Next Glyph|Ctl+]"),
    .invoke = FVMenuChangeChar,
    .mid = MID_Next},
    .ti = {
      .text = (uint32_t *) N_("_Prev Glyph"),
      .image = (GImage *) "viewprev.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Prev Glyph|Ctl+["),
    .invoke = FVMenuChangeChar,
    .mid = MID_Prev},
    .ti = {
      .text = (uint32_t *) N_("Next _Defined Glyph"),
      .image = (GImage *) "viewnextdef.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'D'},
    .shortcut = H_ ("Next Defined Glyph|Alt+Ctl+]"),
    .invoke = FVMenuChangeChar,
    .mid = MID_NextDef},
    .ti = {
      .text = (uint32_t *) N_("Prev Defined Gl_yph"),
      .image = (GImage *) "viewprevdef.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'a'},
    .shortcut = H_ ("Prev Defined Glyph|Alt+Ctl+["),
    .invoke = FVMenuChangeChar,
    .mid = MID_PrevDef},
    .ti = {
      .text = (uint32_t *) N_("_Goto"),
      .image = (GImage *) "viewgoto.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'G'},
    .shortcut = H_ ("Goto|Ctl+Shft+>"),
    .invoke = FVMenuGotoChar
    .ti = {
      .text = (uint32_t *) N_("_Layers"),
      .image = (GImage *) "viewlayers.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .sub = lylist,
    .moveto = lylistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_Show ATT"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'S'},
    .shortcut = H_ ("Show ATT|No Shortcut"),
    .invoke = FVMenuShowAtt
    .ti = {
      .text = (uint32_t *) N_("Display S_ubstitutions..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'u'},
    .shortcut = H_ ("Display Substitutions...|No Shortcut"),
    .invoke = FVMenuDisplaySubs,
    .mid = MID_DisplaySubs},
    .ti = {
      .text = (uint32_t *) N_("Com_binations"),
            .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'b'},
    .sub = cblist,
    .moveto = cblistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("Label Gl_yph By"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'b'},
    .sub = gllist,
    .moveto = gllistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("S_how H. Metrics..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("Show H. Metrics...|No Shortcut"),
    .invoke = FVMenuShowMetrics,
    .mid = MID_ShowHMetrics},
    .ti = {
      .text = (uint32_t *) N_("Show _V. Metrics..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .shortcut = H_ ("Show V. Metrics...|No Shortcut"),
    .invoke = FVMenuShowMetrics,
    .mid = MID_ShowVMetrics},
    .ti = {
      .text = (uint32_t *) N_("32x8 cell window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '2'},
    .shortcut = H_ ("32x8 cell window|Ctl+Shft+%"),
    .invoke = FVMenuWSize,
    .mid = MID_32x8},
    .ti = {
      .text = (uint32_t *) N_("_16x4 cell window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '3'},
    .shortcut = H_ ("16x4 cell window|Ctl+Shft+^"),
    .invoke = FVMenuWSize,
    .mid = MID_16x4},
    .ti = {
      .text = (uint32_t *) N_("_8x2  cell window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '3'},
    .shortcut = H_ ("8x2  cell window|Ctl+Shft+*"),
    .invoke = FVMenuWSize,
    .mid = MID_8x2},
    .ti = {
      .text = (uint32_t *) N_("_24 pixel outline"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '2'},
    .shortcut = H_ ("24 pixel outline|Ctl+2"),
    .invoke = FVMenuSize,
    .mid = MID_24},
    .ti = {
      .text = (uint32_t *) N_("_36 pixel outline"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '3'},
    .shortcut = H_ ("36 pixel outline|Ctl+3"),
    .invoke = FVMenuSize,
    .mid = MID_36},
    .ti = {
      .text = (uint32_t *) N_("_48 pixel outline"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '4'},
    .shortcut = H_ ("48 pixel outline|Ctl+4"),
    .invoke = FVMenuSize,
    .mid = MID_48},
    .ti = {
      .text = (uint32_t *) N_("_72 pixel outline"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '4'},
    .shortcut = H_ ("72 pixel outline|Ctl+7"),
    .invoke = FVMenuSize,
    .mid = MID_72},
    .ti = {
      .text = (uint32_t *) N_("_96 pixel outline"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '4'},
    .shortcut = H_ ("96 pixel outline|Ctl+9"),
    .invoke = FVMenuSize,
    .mid = MID_96},
    .ti = {
      .text = (uint32_t *) N_("_Anti Alias"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'A'},
    .shortcut = H_ ("Anti Alias|Ctl+5"),
    .invoke = FVMenuSize,
    .mid = MID_AntiAlias},
    .ti = {
      .text = (uint32_t *) N_("_Fit to em"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Fit to em|Ctl+6"),
    .invoke = FVMenuSize,
    .mid = MID_FitToEm},
    .ti = {
      .text = (uint32_t *) N_("Bitmap _Magnification..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .checkable = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Bitmap Magnification...|No Shortcut"),
    .invoke = FVMenuMagnify,
    .mid = MID_BitmapMag},
    .ti = {
      .text = (uint32_t *) N_("_HStem"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("HStem|No Shortcut"),
    .invoke = FVMenuHistograms,
    .mid = MID_HStemHist},
    .ti = {
      .text = (uint32_t *) N_("_VStem"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .shortcut = H_ ("VStem|No Shortcut"),
    .invoke = FVMenuHistograms,
    .mid = MID_VStemHist},
    .ti = {
      .text = (uint32_t *) N_("BlueValues"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("BlueValues|No Shortcut"),
    .invoke = FVMenuHistograms,
    .mid = MID_BlueValuesHist},
    .ti = {
      .text = (uint32_t *) N_("Auto_Hint"),
      .image = (GImage *) "hintsautohint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("AutoHint|Ctl+Shft+H"),
    .invoke = FVMenuAutoHint,
    .mid = MID_AutoHint},
    .ti = {
      .text = (uint32_t *) N_("Hint _Substitution Pts"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("Hint Substitution Pts|No Shortcut"),
    .invoke = FVMenuAutoHintSubs,
    .mid = MID_HintSubsPt},
    .ti = {
      .text = (uint32_t *) N_("Auto _Counter Hint"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("Auto Counter Hint|No Shortcut"),
    .invoke = FVMenuAutoCounter,
    .mid = MID_AutoCounter},
    .ti = {
      .text = (uint32_t *) N_("_Don't AutoHint"),
      .image = (GImage *) "hintsdontautohint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("Don't AutoHint|No Shortcut"),
    .invoke = FVMenuDontAutoHint,
    .mid = MID_DontAutoHint},
    .ti = {
      .text = (uint32_t *) N_("Auto_Instr"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut = H_ ("AutoInstr|Ctl+T"),
    .invoke = FVMenuAutoInstr,
    .mid = MID_AutoInstr},
    .ti = {
      .text = (uint32_t *) N_("_Edit Instructions..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .shortcut = H_ ("Edit Instructions...|No Shortcut"),
    .invoke = FVMenuEditInstrs,
    .mid = MID_EditInstructions},
    .ti = {
      .text = (uint32_t *) N_("Edit 'fpgm'..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Edit 'fpgm'...|No Shortcut"),
    .invoke = FVMenuEditTable,
    .mid = MID_Editfpgm},
    .ti = {
      .text = (uint32_t *) N_("Edit 'prep'..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Edit 'prep'...|No Shortcut"),
    .invoke = FVMenuEditTable,
    .mid = MID_Editprep},
    .ti = {
      .text = (uint32_t *) N_("Edit 'maxp'..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Edit 'maxp'...|No Shortcut"),
    .invoke = FVMenuEditTable,
    .mid = MID_Editmaxp},
    .ti = {
      .text = (uint32_t *) N_("Edit 'cvt '..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Edit 'cvt '...|No Shortcut"),
    .invoke = FVMenuEditTable,
    .mid = MID_Editcvt},
    .ti = {
      .text = (uint32_t *) N_("Remove Instr Tables"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .shortcut = H_ ("Remove Instr Tables|No Shortcut"),
    .invoke = FVMenuRmInstrTables,
    .mid = MID_RmInstrTables},
    .ti = {
      .text = (uint32_t *) N_("S_uggest Deltas..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .shortcut = H_ ("Suggest Deltas|No Shortcut"),
    .invoke = FVMenuDeltas,
    .mid = MID_Deltas},
    .ti = {
      .text = (uint32_t *) N_("_Clear Hints"),
      .image = (GImage *) "hintsclearvstems.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Clear Hints|No Shortcut"),
    .invoke = FVMenuClearHints,
    .mid = MID_ClearHints},
    .ti = {
      .text = (uint32_t *) N_("Clear Instructions"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Clear Instructions|No Shortcut"),
    .invoke = FVMenuClearInstrs,
    .mid = MID_ClearInstrs},
    .ti = {
      .text = (uint32_t *) N_("Histograms"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .sub = histlist
    .ti = {
      .text = (uint32_t *) N_("_Center in Width"),
      .image = (GImage *) "metricscenter.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Center in Width|No Shortcut"),
    .invoke = FVMenuCenter,
    .mid = MID_Center},
    .ti = {
      .text = (uint32_t *) N_("_Thirds in Width"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut = H_ ("Thirds in Width|No Shortcut"),
    .invoke = FVMenuCenter,
    .mid = MID_Thirds},
    .ti = {
      .text = (uint32_t *) N_("Set _Width..."),
      .image = (GImage *) "metricssetwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'W'},
    .shortcut = H_ ("Set Width...|Ctl+Shft+L"),
    .invoke = FVMenuSetWidth,
    .mid = MID_SetWidth},
    .ti = {
      .text = (uint32_t *) N_("Set _LBearing..."),
      .image = (GImage *) "metricssetlbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'L'},
    .shortcut = H_ ("Set LBearing...|Ctl+L"),
    .invoke = FVMenuSetWidth,
    .mid = MID_SetLBearing},
    .ti = {
      .text = (uint32_t *) N_("Set _RBearing..."),
      .image = (GImage *) "metricssetrbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Set RBearing...|Ctl+R"),
    .invoke = FVMenuSetWidth,
    .mid = MID_SetRBearing},
    .ti = {
      .text = (uint32_t *) N_("Set Both Bearings..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Set Both Bearings...|No Shortcut"),
    .invoke = FVMenuSetWidth,
    .mid = MID_SetBearings},
    .ti = {
      .text = (uint32_t *) N_("Set _Vertical Advance..."),
      .image = (GImage *) "metricssetvwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .shortcut = H_ ("Set Vertical Advance...|No Shortcut"),
    .invoke = FVMenuSetWidth,
    .mid = MID_SetVWidth},
    .ti = {
      .text = (uint32_t *) N_("_Auto Width..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'A'},
    .shortcut = H_ ("Auto Width...|Ctl+Shft+W"),
    .invoke = FVMenuAutoWidth
    .ti = {
      .text = (uint32_t *) N_("Ker_n By Classes..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("Kern By Classes...|No Shortcut"),
    .invoke = FVMenuKernByClasses
    .ti = {
      .text = (uint32_t *) N_("Remove All Kern _Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Remove All Kern Pairs|No Shortcut"),
    .invoke = FVMenuRemoveKern,
    .mid = MID_RmHKern},
    .ti = {
      .text = (uint32_t *) N_("Kern Pair Closeup..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Kern Pair Closeup...|No Shortcut"),
    .invoke = FVMenuKPCloseup
    .ti = {
      .text = (uint32_t *) N_("VKern By Classes..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'K'},
    .shortcut = H_ ("VKern By Classes...|No Shortcut"),
    .invoke = FVMenuVKernByClasses,
    .mid = MID_VKernByClass},
    .ti = {
      .text = (uint32_t *) N_("VKern From HKern"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("VKern From HKern|No Shortcut"),
    .invoke = FVMenuVKernFromHKern,
    .mid = MID_VKernFromH},
    .ti = {
      .text = (uint32_t *) N_("Remove All VKern Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut = H_ ("Remove All VKern Pairs|No Shortcut"),
    .invoke = FVMenuRemoveVKern,
    .mid = MID_RmVKern},
    .ti = {
      .text = (uint32_t *) N_("_Convert to CID"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Convert to CID|No Shortcut"),
    .invoke = FVMenuConvert2CID,
    .mid = MID_Convert2CID},
    .ti = {
      .text = (uint32_t *) N_("Convert By C_Map"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut = H_ ("Convert By CMap|No Shortcut"),
    .invoke = FVMenuConvertByCMap,
    .mid = MID_ConvertByCMap},
    .ti = {
      .text = (uint32_t *) N_("_Flatten"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("Flatten|No Shortcut"),
    .invoke = FVMenuFlatten,
    .mid = MID_Flatten},
    .ti = {
      .text = (uint32_t *) N_("Fl_attenByCMap"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut = H_ ("FlattenByCMap|No Shortcut"),
    .invoke = FVMenuFlattenByCMap,
    .mid = MID_FlattenByCMap},
    .ti = {
      .text = (uint32_t *) N_("Insert F_ont..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut = H_ ("Insert Font...|No Shortcut"),
    .invoke = FVMenuInsertFont,
    .mid = MID_InsertFont},
    .ti = {
      .text = (uint32_t *) N_("Insert _Blank"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("Insert Blank|No Shortcut"),
    .invoke = FVMenuInsertBlank,
    .mid = MID_InsertBlank},
    .ti = {
      .text = (uint32_t *) N_("_Remove Font"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'R'},
    .shortcut = H_ ("Remove Font|No Shortcut"),
    .invoke = FVMenuRemoveFontFromCID,
    .mid = MID_RemoveFromCID},
    .ti = {
      .text = (uint32_t *) N_("_Change Supplement..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Change Supplement...|No Shortcut"),
    .invoke = FVMenuChangeSupplement,
    .mid = MID_ChangeSupplement},
    .ti = {
      .text = (uint32_t *) N_("C_ID Font Info..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("CID Font Info...|No Shortcut"),
    .invoke = FVMenuCIDFontInfo,
    .mid = MID_CIDFontInfo},
    .ti = {
      .text = (uint32_t *) N_("_Create MM..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Create MM...|No Shortcut"),
    .invoke = FVMenuCreateMM,
    .mid = MID_CreateMM},
    .ti = {
      .text = (uint32_t *) N_("MM _Validity Check"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("MM Validity Check|No Shortcut"),
    .invoke = FVMenuMMValid,
    .mid = MID_MMValid},
    .ti = {
      .text = (uint32_t *) N_("MM _Info..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("MM Info...|No Shortcut"),
    .invoke = FVMenuMMInfo,
    .mid = MID_MMInfo},
    .ti = {
      .text = (uint32_t *) N_("_Blend to New Font..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Blend to New Font...|No Shortcut"),
    .invoke = FVMenuBlendToNew,
    .mid = MID_BlendToNew},
    .ti = {
      .text = (uint32_t *) N_("MM Change Default _Weights..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("MM Change Default Weights...|No Shortcut"),
    .invoke = FVMenuChangeMMBlend,
    .mid = MID_ChangeMMBlend},
    .ti = {
      .text = (uint32_t *) N_("New O_utline Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'u'},
    .shortcut = H_ ("New Outline Window|Ctl+H"),
    .invoke = FVMenuOpenOutline,
    .mid = MID_OpenOutline},
    .ti = {
      .text = (uint32_t *) N_("New _Bitmap Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'B'},
    .shortcut = H_ ("New Bitmap Window|Ctl+J"),
    .invoke = FVMenuOpenBitmap,
    .mid = MID_OpenBitmap},
    .ti = {
      .text = (uint32_t *) N_("New _Metrics Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'M'},
    .shortcut = H_ ("New Metrics Window|Ctl+K"),
    .invoke = FVMenuOpenMetrics,
    .mid = MID_OpenMetrics},
    .ti = {
      .text = (uint32_t *) N_("Warnings"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'M'},
    .shortcut = H_ ("Warnings|No Shortcut"),
    .invoke = _MenuWarnings,
    .mid = MID_Warnings},
    .ti = {
      .text = (uint32_t *) N_("_Help"),
      .image = (GImage *) "helphelp.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut = H_ ("Help|F1"),
    .invoke = FVMenuContextualHelp
    .ti = {
      .text = (uint32_t *) N_("_Overview"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Overview|Shft+F1"),
    .invoke = MenuHelp
    .ti = {
      .text = (uint32_t *) N_("_Index"),
      .image = (GImage *) "helpindex.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut = H_ ("Index|Ctl+F1"),
    .invoke = MenuIndex,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_About..."),
      .image = (GImage *) "helpabout.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'A'},
    .shortcut = H_ ("About...|No Shortcut"),
    .invoke = MenuAbout,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Cu_t"),
      .image = (GImage *) "editcut.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 't'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuCut,
    .mid = MID_Cut},
    .ti = {
      .text = (uint32_t *) N_("_Copy"),
      .image = (GImage *) "editcopy.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuCopy,
    .mid = MID_Copy},
    .ti = {
      .text = (uint32_t *) N_("C_opy Reference"),
      .image = (GImage *) "editcopyref.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'o'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuCopyRef,
    .mid = MID_CopyRef},
    .ti = {
      .text = (uint32_t *) N_("Copy _Width"),
      .image = (GImage *) "editcopywidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'W'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuCopyWidth,
    .mid = MID_CopyWidth},
    .ti = {
      .text = (uint32_t *) N_("_Paste"),
      .image = (GImage *) "editpaste.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'P'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuPaste,
    .mid = MID_Paste},
    .ti = {
      .text = (uint32_t *) N_("C_lear"),
      .image = (GImage *) "editclear.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .shortcut_char = 0,
    .short_mask = 0,
    .invoke = FVMenuClear,
    .mid = MID_Clear},
    .ti = {
      .text = (uint32_t *) N_("Copy _Fg To Bg"),
      .image = (GImage *) "editcopyfg2bg.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuCopyFgBg,
    .mid = MID_CopyFgToBg},
    .ti = {
      .text = (uint32_t *) N_("U_nlink Reference"),
      .image = (GImage *) "editunlink.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'U'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuUnlinkRef,
    .mid = MID_UnlinkRef},
    .ti = {
      .text = (uint32_t *) N_("Glyph _Info..."),
      .image = (GImage *) "elementglyphinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuCharInfo,
    .mid = MID_CharInfo},
    .ti = {
      .text = (uint32_t *) N_("_Transform..."),
      .image = (GImage *) "elementtransform.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'T'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuTransform,
    .mid = MID_Transform},
    .ti = {
      .text = (uint32_t *) N_("_Expand Stroke..."),
      .image = (GImage *) "elementexpandstroke.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'E'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuStroke,
    .mid = MID_Stroke},
    .ti = {
      .text = (uint32_t *) N_("To _Int"),
      .image = (GImage *) "elementround.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'I'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuRound2Int,
    .mid = MID_Round},
    .ti = {
      .text = (uint32_t *) N_("_Correct Direction"),
      .image = (GImage *) "elementcorrectdir.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'D'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuCorrectDir,
    .mid = MID_Correct},
    .ti = {
      .text = (uint32_t *) N_("Auto_Hint"),
      .image = (GImage *) "hintsautohint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuAutoHint,
    .mid = MID_AutoHint},
    .ti = {
      .text = (uint32_t *) N_("_Center in Width"),
      .image = (GImage *) "metricscenter.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .shortcut_char = '\0',
    .short_mask = ksm_control,
    .invoke = FVMenuCenter,
    .mid = MID_Center},
    .ti = {
      .text = (uint32_t *) N_("Set _Width..."),
      .image = (GImage *) "metricssetwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'W'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuSetWidth,
    .mid = MID_SetWidth},
    .ti = {
      .text = (uint32_t *) N_("Set _Vertical Advance..."),
      .image = (GImage *) "metricssetvwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .shortcut_char = '\0',
    .short_mask = ksm_control | ksm_shift,
    .invoke = FVMenuSetWidth,
    .mid = MID_SetVWidth},
    .ti = {
      .text = (uint32_t *) N_("_File"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'F'},
    .sub = fllist,
    .moveto = fllistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_Edit"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'E'},
    .sub = edlist,
    .moveto = edlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("E_lement"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .sub = ellist,
    .moveto = ellistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_Tools"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = true,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'l'},
    .sub = NULL,
    .moveto = fv_tools_list_check
    .ti = {
      .text = (uint32_t *) N_("H_ints"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'i'},
    .sub = htlist,
    .moveto = htlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("E_ncoding"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .sub = enlist,
    .moveto = enlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_View"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'V'},
    .sub = vwlist,
    .moveto = vwlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_Metrics"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'M'},
    .sub = mtlist,
    .moveto = mtlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_CID"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'C'},
    .sub = cdlist,
    .moveto = cdlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("MM"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = '\0'},
    .sub = mmlist,
    .moveto = mmlistcheck_fv
    .ti = {
      .text = (uint32_t *) N_("_Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'W'},
    .sub = wnmenu,
    .moveto = FVWindowMenuBuild
    .ti = {
      .text = (uint32_t *) N_("_Help"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'H'},
    .sub = helplist
