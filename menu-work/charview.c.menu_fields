    .ti = {
      .text = (uint32_t *) N_("New O_utline Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = true,
      .text_is_1byte = true,
      .text_has_mnemonic = true,
      .mnemonic = 'u'
    .shortcut = H_ ("New Outline Window|Ctl+H"),
    .moveto = NULL,
    .invoke = NULL,		/* No function; never available. */
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("New _Bitmap Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'B'
    .shortcut = H_ ("New Bitmap Window|Ctl+J"),
    .invoke = CVMenuOpenBitmap,
    .mid = MID_OpenBitmap
    .ti = {
      .text = (uint32_t *) N_("New _Metrics Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("New Metrics Window|Ctl+K"),
    .invoke = CVMenuOpenMetrics,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("Warnings"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1
    .shortcut = H_ ("Warnings|No Shortcut"),
    .invoke = _MenuWarnings,
    .mid = MID_Warnings
    .ti = {
      .text = (uint32_t *) N_("Font|_New"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'N'
    .ti = {
      .text = (uint32_t *) N_("Font|_New"),
      .image = (GImage *) "filenew.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'N'
    .shortcut = H_ ("New|Ctl+N"),
    .invoke = MenuNew,
    .mid = MID_New
    .ti = {
      .text = (uint32_t *) N_("_Open"),
      .image = (GImage *) "fileopen.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'O'
    .shortcut = H_ ("Open|Ctl+O"),
    .invoke = MenuOpen,
    .mid = MID_Open
    .ti = {
      .text = (uint32_t *) N_("Recen_t"),
      .image = (GImage *) "filerecent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 't'
    .sub = dummyitem,
    .moveto = MenuRecentBuild,
    .mid = MID_Recent
    .ti = {
      .text = (uint32_t *) N_("_Close"),
      .image = (GImage *) "fileclose.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("Close|Ctl+Shft+Q"),
    .invoke = CVMenuClose,
    .mid = MID_Close
    .ti = {
      .text = (uint32_t *) N_("C_lose Tab"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("Close Tab|No Shortcut"),
    .invoke = CVMenuCloseTab,
    .mid = MID_CloseTab
    .ti = {
      .text = (uint32_t *) N_("_Save"),
      .image = (GImage *) "filesave.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'
    .shortcut = H_ ("Save|Ctl+S"),
    .invoke = CVMenuSave,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("S_ave as..."),
      .image = (GImage *) "filesaveas.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'a'
    .shortcut = H_ ("Save as...|Ctl+Shft+S"),
    .invoke = CVMenuSaveAs,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("_Generate Fonts..."),
      .image = (GImage *) "filegenerate.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'G'
    .shortcut = H_ ("Generate Fonts...|Ctl+Shft+G"),
    .invoke = CVMenuGenerate,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("Generate Mac _Family..."),
      .image = (GImage *) "filegeneratefamily.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'
    .shortcut = H_ ("Generate Mac Family...|Alt+Ctl+G"),
    .invoke = CVMenuGenerateFamily,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("Generate TTC..."),
      .image = (GImage *) "filegeneratefamily.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
    .shortcut = H_ ("Generate TTC...|No Shortcut"),
    .invoke = CVMenuGenerateTTC,
    .mid = MID_GenerateTTC
    .ti = {
      .text = (uint32_t *) N_("E_xport..."),
      .image = (GImage *) "fileexport.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 't'
    .shortcut = H_ ("Export...|No Shortcut"),
    .invoke = CVMenuExport,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("_Import..."),
      .image = (GImage *) "fileimport.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'
    .shortcut = H_ ("Import...|Ctl+Shft+I"),
    .invoke = CVMenuImport,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("_Revert File"),
      .image = (GImage *) "filerevert.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'
    .shortcut = H_ ("Revert File|Ctl+Shft+R"),
    .invoke = CVMenuRevert,
    .mid = MID_Revert
    .ti = {
      .text = (uint32_t *) N_("Revert Gl_yph"),
      .image = (GImage *) "filerevertglyph.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'y'},
    .shortcut = H_ ("Revert Glyph|Alt+Ctl+R"),
    .invoke = CVMenuRevertGlyph,
    .mid = MID_RevertGlyph
    .ti = {
      .text = (uint32_t *) N_("_Print..."),
      .image = (GImage *) "fileprint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'
    .shortcut = H_ ("Print...|Ctl+P"),
    .invoke = CVMenuPrint,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("E_xecute Script..."),
      .image = (GImage *) "python.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'x'
    .shortcut = H_ ("Execute Script...|Ctl+."),
    .invoke = CVMenuExecute,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("Pr_eferences..."),
      .image = (GImage *) "fileprefs.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'e'
    .shortcut = H_ ("Preferences...|No Shortcut"),
    .invoke = MenuPrefs,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("_X Resource Editor..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'X'
    .shortcut = H_ ("X Resource Editor...|No Shortcut"),
    .invoke = MenuXRes,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("_Quit"),
      .image = (GImage *) "filequit.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'Q'
    .shortcut = H_ ("Quit|Ctl+Q"),
    .invoke = MenuExit,
    .mid = MID_Quit
    .ti = {
      .text = (uint32_t *) N_("Select _All"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'
    .shortcut = H_ ("Select All|Ctl+A"),
    .invoke = CVSelectAll,
    .mid = MID_SelAll
    .ti = {
      .text = (uint32_t *) N_("_Invert Selection"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'
    .shortcut = H_ ("Invert Selection|Ctl+Escape"),
    .invoke = CVSelectInvert,
    .mid = MID_SelInvert
    .ti = {
      .text = (uint32_t *) N_("_Deselect All"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("Deselect All|Escape"),
    .invoke = CVSelectNone,
    .mid = MID_SelNone
    .ti = {
      .text = (uint32_t *) N_("_First Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'
    .shortcut = H_ ("First Point|Ctl+."),
    .invoke = CVMenuNextPrevPt,
    .mid = MID_FirstPt
    .ti = {
      .text = (uint32_t *) N_("First P_oint, Next Contour"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'
    .shortcut = H_ ("First Point, Next Contour|Alt+Ctl+."),
    .invoke = CVMenuNextPrevPt,
    .mid = MID_FirstPtNextCont
    .ti = {
      .text = (uint32_t *) N_("_Next Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'N'
    .shortcut = H_ ("Next Point|Ctl+Shft+}"),
    .invoke = CVMenuNextPrevPt,
    .mid = MID_NextPt
    .ti = {
      .text = (uint32_t *) N_("_Prev Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'
    .shortcut = H_ ("Prev Point|Ctl+Shft+{"),
    .invoke = CVMenuNextPrevPt,
    .mid = MID_PrevPt
    .ti = {
      .text = (uint32_t *) N_("Ne_xt Control Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'x'
    .shortcut = H_ ("Next Control Point|Ctl+;"),
    .invoke = CVMenuNextPrevCPt,
    .mid = MID_NextCP
    .ti = {
      .text = (uint32_t *) N_("P_rev Control Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'r'
    .shortcut = H_ ("Prev Control Point|Ctl+Shft+:"),
    .invoke = CVMenuNextPrevCPt,
    .mid = MID_PrevCP
    .ti = {
      .text = (uint32_t *) N_("Points on Selected _Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("Points on Selected Contours|Alt+Ctl+,"),
    .invoke = CVMenuSelectContours,
    .mid = MID_Contours
    .ti = {
      .text = (uint32_t *) N_("Point A_t"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'r'
    .shortcut = H_ ("Point At|Ctl+,"),
    .invoke = CVMenuSelectPointAt,
    .mid = MID_SelPointAt
    .ti = {
      .text = (uint32_t *) N_("Select All _Points & Refs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'
    .shortcut = H_ ("Select All Points & Refs|Alt+Ctl+A"),
    .invoke = CVSelectAll,
    .mid = MID_SelectAllPoints
    .ti = {
      .text = (uint32_t *) N_("Select Open Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'
    .shortcut = H_ ("Select Open Contours|No Shortcut"),
    .invoke = CVSelectOpenContours,
    .mid = MID_SelectOpenContours
    .ti = {
      .text = (uint32_t *) N_("Select Anc_hors"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'c'
    .shortcut = H_ ("Select Anchors|No Shortcut"),
    .invoke = CVSelectAll,
    .mid = MID_SelectAnchors
    .ti = {
      .text = (uint32_t *) N_("_Width"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("Width|No Shortcut"),
    .invoke = CVSelectWidth,
    .mid = MID_SelectWidth
    .ti = {
      .text = (uint32_t *) N_("_VWidth"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("VWidth|No Shortcut"),
    .invoke = CVSelectVWidth,
    .mid = MID_SelectVWidth
    .ti = {
      .text = (uint32_t *) N_("Select Points Affected by HM"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'
    .shortcut = H_ ("Select Points Affected by HM|No Shortcut"),
    .invoke = CVSelectHM,
    .mid = MID_SelectHM
    .ti = {
      .text = (uint32_t *) N_("_Undo"),
      .image = (GImage *) "editundo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'U'
    .shortcut = H_ ("Undo|Ctl+Z"),
    .invoke = CVUndo,
    .mid = MID_Undo
    .ti = {
      .text = (uint32_t *) N_("_Redo"),
      .image = (GImage *) "editredo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'
    .shortcut = H_ ("Redo|Ctl+Y"),
    .invoke = CVRedo,
    .mid = MID_Redo
    .ti = {
      .text = (uint32_t *) N_("Cu_t"),
      .image = (GImage *) "editcut.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 't'
    .shortcut = H_ ("Cut|Ctl+X"),
    .invoke = CVCut,
    .mid = MID_Cut
    .ti = {
      .text = (uint32_t *) N_("_Copy"),
      .image = (GImage *) "editcopy.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("Copy|Ctl+C"),
    .invoke = CVCopy,
    .mid = MID_Copy
    .ti = {
      .text = (uint32_t *) N_("C_opy Reference"),
      .image = (GImage *) "editcopyref.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("Copy Reference|Ctl+G"),
    .invoke = CVCopyRef,
    .mid = MID_CopyRef
    .ti = {
      .text = (uint32_t *) N_("Copy Loo_kup Data"),
      .image = (GImage *) "editcopylookupdata.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("Copy Lookup Data|Alt+Ctl+C"),
    .invoke = CVCopyLookupData,
    .mid = MID_CopyLookupData
    .ti = {
      .text = (uint32_t *) N_("Copy _Width"),
      .image = (GImage *) "editcopywidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'W'
    .shortcut = H_ ("Copy Width|Ctl+W"),
    .invoke = CVCopyWidth,
    .mid = MID_CopyWidth
    .ti = {
      .text = (uint32_t *) N_("Co_py LBearing"),
      .image = (GImage *) "editcopylbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'p'
    .shortcut = H_ ("Copy LBearing|No Shortcut"),
    .invoke = CVCopyWidth,
    .mid = MID_CopyLBearing
    .ti = {
      .text = (uint32_t *) N_("Copy RBearin_g"),
      .image = (GImage *) "editcopyrbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
        .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'g'
    .shortcut = H_ ("Copy RBearing|No Shortcut"),
    .invoke = CVCopyWidth,
    .mid = MID_CopyRBearing
    .ti = {
      .text = (uint32_t *) N_("_Paste"),
      .image = (GImage *) "editpaste.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'
    .shortcut = H_ ("Paste|Ctl+V"),
    .invoke = CVPaste,
    .mid = MID_Paste
    .ti = {
      .text = (uint32_t *) N_("C_lear"),
      .image = (GImage *) "editclear.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'
    .shortcut = H_ ("Clear|Delete"),
    .invoke = CVClear,
    .mid = MID_Clear
    .ti = {
      .text = (uint32_t *) N_("Clear _Background"),
      .image = (GImage *) "editclearback.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'B'
    .shortcut = H_ ("Clear Background|No Shortcut"),
    .invoke = CVClearBackground,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("points|_Merge"),
      .image = (GImage *) "editmerge.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Merge|Ctl+M"),
    .invoke = CVMerge,
    .mid = MID_Merge
    .ti = {
      .text = (uint32_t *) N_("_Join"),
      .image = (GImage *) "editjoin.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'J'
    .shortcut = H_ ("Join|Ctl+Shft+J"),
    .invoke = CVJoin,
    .mid = MID_Join
    .ti = {
      .text = (uint32_t *) N_("Copy _Fg To Bg"),
      .image = (GImage *) "editcopyfg2bg.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'
    .shortcut = H_ ("Copy Fg To Bg|Ctl+Shft+C"),
    .invoke = CVCopyFgBg,
    .mid = MID_CopyFgToBg
    .ti = {
      .text = (uint32_t *) N_("Cop_y Layer To Layer..."),
      .image = (GImage *) "editcopylayer2layer.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'
    .shortcut = H_ ("Copy Layer To Layer...|No Shortcut"),
    .invoke = CVMenuCopyL2L,
    .mid = MID_CopyBgToFg
    .ti = {
      .text = (uint32_t *) N_("Copy Gri_d Fit"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("Copy Grid Fit|No Shortcut"),
    .invoke = CVMenuCopyGridFit,
    .mid = MID_CopyGridFit
    .ti = {
      .text = (uint32_t *) N_("_Select"),
      .image = (GImage *) "editselect.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'
    .sub = sllist,
    .moveto = sllistcheck,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("U_nlink Reference"),
      .image = (GImage *) "editunlink.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'U'
    .shortcut = H_ ("Unlink Reference|Ctl+U"),
    .invoke = CVUnlinkRef,
    .mid = MID_UnlinkRef
    .ti = {
      .text = (uint32_t *) N_("Remo_ve Undoes"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'e'
    .shortcut = H_ ("Remove Undoes|No Shortcut"),
    .invoke = CVRemoveUndoes,
    .mid = MID_RemoveUndoes
    .ti = {
      .text = (uint32_t *) N_("_Curve"),
      .image = (GImage *) "pointscurve.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("Curve|Ctl+2"),
    .invoke = CVMenuPointType,
    .mid = MID_Curve
    .ti = {
      .text = (uint32_t *) N_("_HVCurve"),
      .image = (GImage *) "pointshvcurve.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("HVCurve|No Shortcut"),
    .invoke = CVMenuPointType,
    .mid = MID_HVCurve
    .ti = {
      .text = (uint32_t *) N_("C_orner"),
      .image = (GImage *) "pointscorner.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("Corner|Ctl+3"),
    .invoke = CVMenuPointType,
    .mid = MID_Corner
    .ti = {
      .text = (uint32_t *) N_("_Tangent"),
      .image = (GImage *) "pointstangent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'
    .shortcut = H_ ("Tangent|Ctl+4"),
    .invoke = CVMenuPointType,
    .mid = MID_Tangent
    .ti = {
      .text = (uint32_t *) N_("_Make First"),
      .image = (GImage *) "menuempty.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Make First|Ctl+1"),
    .invoke = CVMenuMakeFirst,
    .mid = MID_MakeFirst
    .ti = {
      .text = (uint32_t *) N_("Can Be _Interpolated"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'
    .shortcut = H_ ("Can Be Interpolated|No Shortcut"),
    .invoke = CVMenuImplicit,
    .mid = MID_ImplicitPt
    .ti = {
      .text = (uint32_t *) N_("Can't _Be Interpolated"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'
    .shortcut = H_ ("Can't Be Interpolated|No Shortcut"),
    .invoke = CVMenuImplicit,
    .mid = MID_NoImplicitPt
    .ti = {
      .text = (uint32_t *) N_("Center Bet_ween Control Points"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Center Between Control Points|No Shortcut"),
    .invoke = CVMenuCenterCP,
    .mid = MID_CenterCP
    .ti = {
      .text = (uint32_t *) N_("_Add Anchor"),
      .image = (GImage *) "pointsaddanchor.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'
    .shortcut = H_ ("Add Anchor|Ctl+0"),
    .invoke = CVMenuAddAnchor,
    .mid = MID_AddAnchor
    .ti = {
      .text = (uint32_t *) N_("Acceptable _Extrema"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("Acceptable Extrema|No Shortcut"),
    .invoke = CVMenuAcceptableExtrema,
    .mid = MID_AcceptableExtrema
    .ti = {
      .text = (uint32_t *) N_("Make _Line"),
      .image = (GImage *) "pointsmakeline.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Make Line|No Shortcut"),
    .invoke = CVMenuMakeLine,
    .mid = MID_MakeLine
    .ti = {
      .text = (uint32_t *) N_("Ma_ke Arc"),
      .image = (GImage *) "pointsmakearc.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Make Arc|No Shortcut"),
    .invoke = CVMenuMakeLine,
    .mid = MID_MakeArc
    .ti = {
      .text = (uint32_t *) N_("Inse_rt Point On Spline At..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Insert Point On Spline At...|No Shortcut"),
    .invoke = CVMenuInsertPt,
    .mid = MID_InsertPtOnSplineAt
    .ti = {
      .text = (uint32_t *) N_("_Name Contour"),
      .image = (GImage *) "pointsnamecontour.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Name Contour|No Shortcut"),
    .invoke = CVMenuNameContour,
    .mid = MID_NameContour
    .ti = {
      .text = (uint32_t *) N_("Make Clip _Path"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Make Clip Path|No Shortcut"),
    .invoke = CVMenuClipPath,
    .mid = MID_ClipPath
    .ti = {
      .text = (uint32_t *) N_("Tool_s"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .sub = cvtoollist,
    .moveto = cvtoollist_check,
    .mid = MID_Tools
    .ti = {
      .text = (uint32_t *) N_("G4 _Curve"),
      .image = (GImage *) "pointscurve.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'
    .shortcut = H_ ("G4 Curve|Ctl+2"),
    .invoke = CVMenuPointType,
    .mid = MID_SpiroG4
    .ti = {
      .text = (uint32_t *) N_("_G2 Curve"),
      .image = (GImage *) "pointsG2curve.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("G2 Curve|No Shortcut"),
    .invoke = CVMenuPointType,
    .mid = MID_SpiroG2
    .ti = {
      .text = (uint32_t *) N_("C_orner"),
      .image = (GImage *) "pointscorner.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'
    .shortcut = H_ ("Corner|Ctl+3"),
    .invoke = CVMenuPointType,
    .mid = MID_SpiroCorner
    .ti = {
      .text = (uint32_t *) N_("_Left Constraint"),
      .image = (GImage *) "pointsspiroprev.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'
    .shortcut = H_ ("Prev Constraint|Ctl+4"),
    .invoke = CVMenuPointType,
    .mid = MID_SpiroLeft
    .ti = {
      .text = (uint32_t *) N_("_Right Constraint"),
      .image = (GImage *) "pointsspironext.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'
    .shortcut = H_ ("Next Constraint|Ctl+5"),
    .invoke = CVMenuPointType,
    .mid = MID_SpiroRight
    .ti = {
      .text = (uint32_t *) N_("_Make First"),
      .image = (GImage *) "menuempty.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Make First|Ctl+1"),
    .invoke = CVMenuSpiroMakeFirst,
    .mid = MID_SpiroMakeFirst
    .ti = {
      .text = (uint32_t *) N_("_Add Anchor"),
      .image = (GImage *) "pointsaddanchor.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'
    .shortcut = H_ ("Add Anchor|Ctl+0"),
    .invoke = CVMenuAddAnchor,
    .mid = MID_AddAnchor
    .ti = {
      .text = (uint32_t *) N_("_Name Contour"),
      .image = (GImage *) "pointsnamecontour.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Name Contour|No Shortcut"),
    .invoke = CVMenuNameContour,
    .mid = MID_NameContour
    .ti = {
      .text = (uint32_t *) N_("Tool_s"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .sub = cvspirotoollist,
    .moveto = cvtoollist_check,
    .mid = MID_Tools
    .ti = {
      .text = (uint32_t *) N_("_Average Points"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'
    .shortcut = H_ ("Average Points|Ctl+Shft+@"),
    .invoke = CVMenuConstrain,
    .mid = MID_Average
    .ti = {
      .text = (uint32_t *) N_("_Space Points"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'
    .shortcut = H_ ("Space Points|Ctl+Shft+#"),
    .invoke = CVMenuConstrain,
    .mid = MID_SpacePts
    .ti = {
      .text = (uint32_t *) N_("Space _Regions..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'
    .shortcut = H_ ("Space Regions...|No Shortcut"),
    .invoke = CVMenuConstrain,
    .mid = MID_SpaceRegion
    .ti = {
      .text = (uint32_t *) N_("Make _Parallel..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'
    .shortcut = H_ ("Make Parallel...|No Shortcut"),
    .invoke = CVMenuMakeParallel,
    .mid = MID_MakeParallel
    .ti = {
      .text = (uint32_t *) N_("_Simplify"),
      .image = (GImage *) "elementsimplify.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'
    .shortcut = H_ ("Simplify|Ctl+Shft+M"),
    .invoke = CVMenuSimplify,
    .mid = MID_Simplify
    .ti = {
      .text = (uint32_t *) N_("Simplify More..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Simplify More...|Alt+Ctl+Shft+M"),
    .invoke = CVMenuSimplifyMore,
    .mid = MID_SimplifyMore
    .ti = {
      .text = (uint32_t *) N_("Clea_nup Glyph"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'n'
    .shortcut = H_ ("Cleanup Glyph|No Shortcut"),
    .invoke = CVMenuCleanupGlyph,
    .mid = MID_CleanupGlyph
    .ti = {
      .text = (uint32_t *) N_("Canonical Start _Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'n'
    .shortcut = H_ ("Canonical Start Point|No Shortcut"),
    .invoke = CVMenuCanonicalStart,
    .mid = MID_CanonicalStart
    .ti = {
      .text = (uint32_t *) N_("Canonical _Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'n'
    .shortcut = H_ ("Canonical Contours|No Shortcut"),
    .invoke = CVMenuCanonicalContours,
    .mid = MID_CanonicalContours
    .ti = {
      .text = (uint32_t *) N_("_First"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'
    .shortcut = H_ ("First|No Shortcut"),
    .invoke = CVMenuOrder,
    .mid = MID_First
    .ti = {
      .text = (uint32_t *) N_("_Earlier"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'
    .shortcut = H_ ("Earlier|No Shortcut"),
    .invoke = CVMenuOrder,
    .mid = MID_Earlier
    .ti = {
      .text = (uint32_t *) N_("L_ater"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'n'
    .shortcut = H_ ("Later|No Shortcut"),
    .invoke = CVMenuOrder,
    .mid = MID_Later
    .ti = {
      .text = (uint32_t *) N_("_Last"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'n'
    .shortcut = H_ ("Last|No Shortcut"),
    .invoke = CVMenuOrder,
    .mid = MID_Last
    .ti = {
      .text = (uint32_t *) N_("_Remove Overlap"),
      .image = (GImage *) "overlaprm.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'
    .shortcut = H_ ("Remove Overlap|Ctl+Shft+O"),
    .invoke = CVMenuOverlap,
    .mid = MID_RmOverlap
    .ti = {
      .text = (uint32_t *) N_("_Intersect"),
      .image = (GImage *) "overlapintersection.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("Intersect|No Shortcut"),
    .invoke = CVMenuOverlap,
    .mid = MID_Intersection},
    .ti = {
      .text = (uint32_t *) N_("_Exclude"),
      .image = (GImage *) "overlapexclude.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'E'},
    .shortcut = H_ ("Exclude|No Shortcut"),
    .invoke = CVMenuOverlap,
    .mid = MID_Exclude},
    .ti = {
      .text = (uint32_t *) N_("_Find Intersections"),
      .image = (GImage *) "overlapfindinter.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'},
    .shortcut = H_ ("Find Intersections|No Shortcut"),
    .invoke = CVMenuOverlap,
    .mid = MID_FindInter},
    .ti = {
      .text = (uint32_t *) N_("Change _Weight..."),
      .image = (GImage *) "styleschangeweight.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Change Weight...|Ctl+Shft+!"),
    .invoke = CVMenuEmbolden,
    .mid = MID_Embolden},
    .ti = {
      .text = (uint32_t *) N_("_Italic..."),
      .image = (GImage *) "stylesitalic.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'},
    .shortcut = H_ ("Italic...|No Shortcut"),
    .invoke = CVMenuItalic,
    .mid = MID_Italic},
    .ti = {
      .text = (uint32_t *) N_("Obli_que..."),
      .image = (GImage *) "stylesoblique.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Oblique...|No Shortcut"),
    .invoke = CVMenuOblique,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Condense/Extend..."),
      .image = (GImage *) "stylesextendcondense.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Condense...|No Shortcut"),
    .invoke = CVMenuCondense,
    .mid = MID_Condense},
    .ti = {
      .text = (uint32_t *) N_("Change _X-Height..."),
      .image = (GImage *) "styleschangexheight.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("Change XHeight...|No Shortcut"),
    .invoke = CVMenuChangeXHeight,
    .mid = MID_ChangeXHeight},
    .ti = {
      .text = (uint32_t *) N_("Change _Glyph..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("Change Glyph...|No Shortcut"),
    .invoke = CVMenuChangeGlyph,
    .mid = MID_ChangeGlyph},
    .ti = {
      .text = (uint32_t *) N_("In_line..."),
      .image = (GImage *) "stylesinline.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'O'},
    .shortcut = H_ ("Inline|No Shortcut"),
    .invoke = CVMenuInline,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Outline..."),
      .image = (GImage *) "stylesoutline.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("Outline|No Shortcut"),
    .invoke = CVMenuOutline,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("S_hadow..."),
      .image = (GImage *) "stylesshadow.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'},
    .shortcut = H_ ("Shadow|No Shortcut"),
    .invoke = CVMenuShadow,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Wireframe..."),
      .image = (GImage *) "styleswireframe.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'W'},
    .shortcut = H_ ("Wireframe|No Shortcut"),
    .invoke = CVMenuWireframe,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Build Accented Glyph"),
      .image = (GImage *) "elementbuildaccent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'u'},
    .shortcut = H_ ("Build Accented Glyph|Ctl+Shft+A"),
    .invoke = CVMenuBuildAccent,
    .mid = MID_BuildAccent},
    .ti = {
      .text = (uint32_t *) N_("Build _Composite Glyph"),
      .image = (GImage *) "elementbuildcomposite.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'B'},
    .shortcut = H_ ("Build Composite Glyph|No Shortcut"),
    .invoke = CVMenuBuildComposite,
    .mid = MID_BuildComposite},
    .ti = {
      .text = (uint32_t *) N_("_References..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'u'},
    .shortcut = H_ ("References...|Alt+Ctl+I"),
    .invoke = CVMenuShowDependentRefs,
    .mid = MID_ShowDependentRefs},
    .ti = {
      .text = (uint32_t *) N_("_Substitutions..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'B'},
    .shortcut = H_ ("Substitutions...|No Shortcut"),
    .invoke = CVMenuShowDependentSubs,
    .mid = MID_ShowDependentSubs},
    .ti = {
      .text = (uint32_t *) N_("_Transform..."),
      .image = (GImage *) "elementtransform.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("Transform...|Ctl+\\"),
    .invoke = CVMenuTransform,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Point of View Projection..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("Point of View Projection...|Ctl+Shft+<"),
    .invoke = CVMenuPOV,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Non Linear Transform..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("Non Linear Transform...|Ctl+Shft+|"),
    .invoke = CVMenuNLTransform,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("To _Int"),
      .image = (GImage *) "elementround.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("To Int|Ctl+Shft+_"),
    .invoke = CVMenuRound2Int,
    .mid = MID_Round},
    .ti = {
      .text = (uint32_t *) N_("To _Hundredths"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("To Hundredths|No Shortcut"),
    .invoke = CVMenuRound2Hundredths,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Cluster"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("Cluster|No Shortcut"),
    .invoke = CVMenuCluster,
    .mid = MID_RoundToCluster},
    .ti = {
      .text = (uint32_t *) N_("_Font Info..."),
      .image = (GImage *) "elementfontinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'},
    .shortcut = H_ ("Font Info...|Ctl+Shft+F"),
    .invoke = CVMenuFontInfo,
    .mid = MID_FontInfo},
    .ti = {
      .text = (uint32_t *) N_("_Glyph Info..."),
      .image = (GImage *) "elementglyphinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("Glyph Info...|Alt+Ctl+Shft+I"),
    .invoke = CVMenuCharInfo,
    .mid = MID_CharInfo},
    .ti = {
      .text = (uint32_t *) N_("Get _Info..."),
      .image = (GImage *) "elementgetinfo.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .shortcut = H_ ("Get Info...|Ctl+I"),
    .invoke = CVMenuGetInfo,
    .mid = MID_GetInfo},
    .ti = {
      .text = (uint32_t *) N_("S_how Dependent"),
      .image = (GImage *) "elementshowdep.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'D'},
    .sub = delist,
    .moveto = delistcheck,
    .mid = MID_ShowDependentRefs
    .ti = {
      .text = (uint32_t *) N_("Find Proble_ms..."),
      .image = (GImage *) "elementfindprobs.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .shortcut = H_ ("Find Problems...|Ctl+E"),
    .invoke = CVMenuFindProblems,
    .mid = MID_FindProblems},
    .ti = {
      .text = (uint32_t *) N_("Bitm_ap strikes Available..."),
      .image = (GImage *) "elementbitmapsavail.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'},
    .shortcut = H_ ("Bitmap strikes Available...|Ctl+Shft+B"),
    .invoke = CVMenuBitmaps,
    .mid = MID_AvailBitmaps},
    .ti = {
      .text = (uint32_t *) N_("Regenerate _Bitmap Glyphs..."),
      .image = (GImage *) "elementregenbitmaps.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'B'},
    .shortcut = H_ ("Regenerate Bitmap Glyphs...|Ctl+B"),
    .invoke = CVMenuBitmaps,
    .mid = MID_RegenBitmaps},
    .ti = {
      .text = (uint32_t *) N_("Remove Bitmap Glyphs..."),
      .image = (GImage *) "elementremovebitmaps.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'},
    .shortcut = H_ ("Remove Bitmap Glyphs...|No Shortcut"),
    .invoke = CVMenuBitmaps,
    .mid = MID_RemoveBitmaps},
    .ti = {
      .text = (uint32_t *) N_("St_yles"),
      .image = (GImage *) "elementstyles.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'},
    .sub = eflist,
    .mid = MID_Styles},
    .ti = {
      .text = (uint32_t *) N_("_Transformations"),
      .image = (GImage *) "elementtransform.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("Transformations|No Shortcut"),
    .sub = trlist,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Expand Stroke..."),
      .image = (GImage *) "elementexpandstroke.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'E'},
    .shortcut = H_ ("Expand Stroke...|Ctl+Shft+E"),
    .invoke = CVMenuStroke,
    .mid = MID_Stroke},
    .ti = {
      .text = (uint32_t *) N_("Tile _Path..."),
      .image = (GImage *) "elementtilepath.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .shortcut = H_ ("Tile Path...|No Shortcut"),
    .invoke = CVMenuTilePath,
    .mid = MID_TilePath},
    .ti = {
      .text = (uint32_t *) N_("Tile Pattern..."),
      .image = (GImage *) "elementtilepattern.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'},
    .shortcut = H_ ("Tile Pattern...|No Shortcut"),
    .invoke = CVMenuPatternTile,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("O_verlap"),
      .image = (GImage *) "overlaprm.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'v'},
    .sub = rmlist,
    .mid = MID_RmOverlap},
    .ti = {
      .text = (uint32_t *) N_("_Simplify"),
      .image = (GImage *) "elementsimplify.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'},
    .sub = smlist,
    .moveto = smlistcheck,
    .mid = MID_Simplify},
    .ti = {
      .text = (uint32_t *) N_("Add E_xtrema"),
      .image = (GImage *) "elementaddextrema.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'x'},
    .shortcut = H_ ("Add Extrema|Ctl+Shft+X"),
    .invoke = CVMenuAddExtrema,
    .mid = MID_AddExtrema},
    .ti = {
      .text = (uint32_t *) N_("Autot_race"),
      .image = (GImage *) "elementautotrace.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'r'},
    .shortcut = H_ ("Autotrace|Ctl+Shft+T"),
    .invoke = CVMenuAutotrace,
    .mid = MID_Autotrace},
    .ti = {
      .text = (uint32_t *) N_("A_lign"),
      .image = (GImage *) "elementalign.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = allist,
    .moveto = allistcheck,
    .mid = MID_Align},
    .ti = {
      .text = (uint32_t *) N_("Roun_d"),
      .image = (GImage *) "elementround.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'I'},
    .sub = rndlist,
    .moveto = rndlistcheck,
    .mid = MID_Round},
    .ti = {
      .text = (uint32_t *) N_("_Order"),
      .image = (GImage *) "elementorder.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'},
    .sub = orlist,
    .moveto = orlistcheck,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Check Self-Intersection"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .shortcut = H_ ("Clockwise|No Shortcut"),
    .invoke = CVMenuCheckSelf,
    .mid = MID_CheckSelf},
    .ti = {
      .text = (uint32_t *) N_("Glyph Self-Intersects"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .shortcut = H_ ("Clockwise|No Shortcut"),
    .invoke = CVMenuGlyphSelfIntersects,
    .mid = MID_GlyphSelfIntersects},
    .ti = {
      .text = (uint32_t *) N_("Cloc_kwise"),
      .image = (GImage *) "elementclockwise.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .shortcut = H_ ("Clockwise|No Shortcut"),
    .invoke = CVMenuDir,
    .mid = MID_Clockwise},
    .ti = {
      .text = (uint32_t *) N_("Cou_nter Clockwise"),
      .image = (GImage *) "elementanticlock.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'n'},
    .shortcut = H_ ("Counter Clockwise|No Shortcut"),
    .invoke = CVMenuDir,
    .mid = MID_Counter},
    .ti = {
      .text = (uint32_t *) N_("_Correct Direction"),
      .image = (GImage *) "elementcorrectdir.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'D'},
    .shortcut = H_ ("Correct Direction|Ctl+Shft+D"),
    .invoke = CVMenuCorrectDir,
    .mid = MID_Correct},
    .ti = {
      .text = (uint32_t *) N_("Reverse Direction"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'D'},
    .shortcut = H_ ("Reverse Direction|No Shortcut"),
    .invoke = CVMenuReverseDir,
    .mid = MID_ReverseDir},
    .ti = {
      .text = (uint32_t *) N_("Insert Text Outlines..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'D'},
    .shortcut = H_ ("Insert Text Outlines|No Shortcut"),
    .invoke = CVMenuInsertText,
    .mid = MID_InsertText},
    .ti = {
      .text = (uint32_t *) N_("B_uild"),
      .image = (GImage *) "elementbuildaccent.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'u'},
    .sub = balist,
    .moveto = balistcheck,
    .mid = MID_BuildAccent},
    .ti = {
      .text = (uint32_t *) N_("Compare Layers..."),
      .image = (GImage *) "elementcomparelayers.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'u'},
    .shortcut = H_ ("Compare Layers...|No Shortcut"),
    .invoke = CVMenuCompareL2L,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Auto_Hint"),
      .image = (GImage *) "hintsautohint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .shortcut = H_ ("AutoHint|Ctl+Shft+H"),
    .invoke = CVMenuAutoHint,
    .mid = MID_AutoHint},
    .ti = {
      .text = (uint32_t *) N_("Hint _Substitution Pts"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .shortcut = H_ ("Hint Substitution Pts|No Shortcut"),
    .invoke = CVMenuAutoHintSubs,
    .mid = MID_HintSubsPt},
    .ti = {
      .text = (uint32_t *) N_("Auto _Counter Hint"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .shortcut = H_ ("Auto Counter Hint|No Shortcut"),
    .invoke = CVMenuAutoCounter,
    .mid = MID_AutoCounter},
    .ti = {
      .text = (uint32_t *) N_("_Don't AutoHint"),
      .image = (GImage *) "hintsdontautohint.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .shortcut = H_ ("Don't AutoHint|No Shortcut"),
    .invoke = CVMenuDontAutoHint,
    .mid = MID_DontAutoHint},
    .ti = {
      .text = (uint32_t *) N_("Auto_Instr"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("AutoInstr|Ctl+T"),
    .invoke = CVMenuNowakAutoInstr,
    .mid = MID_AutoInstr},
    .ti = {
      .text = (uint32_t *) N_("_Edit Instructions..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .shortcut = H_ ("Edit Instructions...|No Shortcut"),
    .invoke = CVMenuEditInstrs,
    .mid = MID_EditInstructions},
    .ti = {
      .text = (uint32_t *) N_("_Debug..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .shortcut = H_ ("Debug...|No Shortcut"),
    .invoke = CVMenuDebug,
    .mid = MID_Debug},
    .ti = {
      .text = (uint32_t *) N_("S_uggest Deltas..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .shortcut = H_ ("Suggest Deltas|No Shortcut"),
    .invoke = CVMenuDeltas,
    .mid = MID_Deltas},
    .ti = {
      .text = (uint32_t *) N_("_Clear HStem"),
      .image = (GImage *) "hintsclearhstems.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'},
    .shortcut = H_ ("Clear HStem|No Shortcut"),
    .invoke = CVMenuClearHints,
    .mid = MID_ClearHStem},
    .ti = {
      .text = (uint32_t *) N_("Clear _VStem"),
      .image = (GImage *) "hintsclearvstems.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .shortcut = H_ ("Clear VStem|No Shortcut"),
    .invoke = CVMenuClearHints,
    .mid = MID_ClearVStem},
    .ti = {
      .text = (uint32_t *) N_("Clear DStem"),
      .image = (GImage *) "hintscleardstems.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .shortcut = H_ ("Clear DStem|No Shortcut"),
    .invoke = CVMenuClearHints,
    .mid = MID_ClearDStem},
    .ti = {
      .text = (uint32_t *) N_("Clear Instructions"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'},
    .shortcut = H_ ("Clear Instructions|No Shortcut"),
    .invoke = CVMenuClearInstrs,
    .mid = MID_ClearInstr},
    .ti = {
      .text = (uint32_t *) N_("_Add HHint"),
      .image = (GImage *) "hintsaddhstem.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'},
    .shortcut = H_ ("Add HHint|No Shortcut"),
    .invoke = CVMenuAddHint,
    .mid = MID_AddHHint},
    .ti = {
      .text = (uint32_t *) N_("Add VHi_nt"),
      .image = (GImage *) "hintsaddvstem.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 's'},
    .shortcut = H_ ("Add VHint|No Shortcut"),
    .invoke = CVMenuAddHint,
    .mid = MID_AddVHint},
    .ti = {
      .text = (uint32_t *) N_("Add DHint"),
      .image = (GImage *) "hintsadddstem.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 't'},
    .shortcut = H_ ("Add DHint|No Shortcut"),
    .invoke = CVMenuAddHint,
    .mid = MID_AddDHint},
    .ti = {
      .text = (uint32_t *) N_("Crea_te HHint..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'r'},
    .shortcut = H_ ("Create HHint...|No Shortcut"),
    .invoke = CVMenuCreateHint,
    .mid = MID_CreateHHint},
    .ti = {
      .text = (uint32_t *) N_("Cr_eate VHint..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'e'},
    .shortcut = H_ ("Create VHint...|No Shortcut"),
    .invoke = CVMenuCreateHint,
    .mid = MID_CreateVHint},
    .ti = {
      .text = (uint32_t *) N_("_Review Hints..."),
      .image = (GImage *) "hintsreviewhints.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'
    .shortcut = H_ ("Review Hints...|Alt+Ctl+H"),
    .invoke = CVMenuReviewHints,
    .mid = MID_ReviewHints},
    .ti = {
      .text = (uint32_t *) N_("_Center in Width"),
      .image = (GImage *)"metricscenter.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'C'},
    .shortcut = H_ ("Center in Width|No Shortcut"),
    .invoke = CVMenuCenter,
    .mid = MID_Center},
    .ti = {
      .text = (uint32_t *) N_("_Thirds in Width"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("Thirds in Width|No Shortcut"),
    .invoke = CVMenuCenter,
    .mid = MID_Thirds},
    .ti = {
      .text = (uint32_t *) N_("Set _Width..."),
      .image = (GImage *)"metricssetwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'W'},
    .shortcut = H_ ("Set Width...|Ctl+Shft+L"),
    .invoke = CVMenuSetWidth,
    .mid = MID_SetWidth},
    .ti = {
      .text = (uint32_t *) N_("Set _LBearing..."),
      .image = (GImage *)"metricssetlbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'L'},
    .shortcut = H_ ("Set LBearing...|Ctl+L"),
    .invoke = CVMenuSetWidth,
    .mid = MID_SetLBearing},
    .ti = {
      .text = (uint32_t *) N_("Set _RBearing..."),
      .image = (GImage *)"metricssetrbearing.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Set RBearing...|Ctl+R"),
    .invoke = CVMenuSetWidth,
    .mid = MID_SetRBearing},
    .ti = {
      .text = (uint32_t *) N_("Set Both Bearings..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Set Both Bearings...|No Shortcut"),
    .invoke = CVMenuSetWidth,
    .mid = MID_SetBearings},
    .ti = {
      .text = (uint32_t *) N_("Set _Vertical Advance..."),
      .image = (GImage *)"metricssetvwidth.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .shortcut = H_ ("Set Vertical Advance...|No Shortcut"),
    .invoke = CVMenuSetWidth,
    .mid = MID_SetVWidth},
    .ti = {
      .text = (uint32_t *) N_("Remove Kern _Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .shortcut = H_ ("Remove Kern Pairs|No Shortcut"),
    .invoke = CVMenuRemoveKern,
    .mid = MID_RemoveKerns},
    .ti = {
      .text = (uint32_t *) N_("Remove VKern Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .shortcut = H_ ("Remove VKern Pairs|No Shortcut"),
    .invoke = CVMenuRemoveVKern,
    .mid = MID_RemoveVKerns},
    .ti = {
      .text = (uint32_t *) N_("Kern Pair Closeup..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .shortcut = H_ ("Kern Pair Closeup...|No Shortcut"),
    .invoke = CVMenuKPCloseup,
    .mid = MID_KPCloseup},
    .ti = {
      .text = (uint32_t *) N_("_Tools"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'T'},
    .shortcut = H_ ("Tools|No Shortcut"),
    .invoke = CVMenuPaletteShow,
    .mid = MID_Tools},
    .ti = {
      .text = (uint32_t *) N_("_Layers"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'L'},
    .shortcut = H_ ("Layers|No Shortcut"),
    .invoke = CVMenuPaletteShow,
    .mid = MID_Layers},
    .ti = {
      .text = (uint32_t *) N_("_Docked Palettes"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'D'},
    .shortcut = H_ ("Docked Palettes|No Shortcut"),
    .invoke = CVMenuPalettesDock,
    .mid = MID_DockPalettes},
    .ti = {
      .text = (uint32_t *) N_("_Detach"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'K'},
    .shortcut = H_ ("Detach|No Shortcut"),
    .invoke = CVMenuAPDetach,
    .ti = {
      .text = (uint32_t *) N_("_Kern Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'K'},
    .shortcut = H_ ("Kern Pairs|No Shortcut"),
    .invoke = CVMenuKernPairs,
    .mid = MID_KernPairs},
    .ti = {
      .text = (uint32_t *) N_("_Anchored Pairs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'},
    .shortcut = H_ ("Anchored Pairs|No Shortcut"),
    .invoke = CVMenuAnchorPairs,
    .mid = MID_AnchorPairs},
    .ti = {
      .text = (uint32_t *) N_("_Anchor Control..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .sub = ap2list,
    .moveto = ap2listbuild,
    .mid = MID_AnchorControl},
    .ti = {
      .text = (uint32_t *) N_("Anchor _Glyph at Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'},
    .sub = aplist,
    .moveto = aplistcheck,
    .mid = MID_AnchorGlyph},
    .ti = {
      .text = (uint32_t *) N_("_Ligatures"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'L'},
    .shortcut = H_ ("Ligatures|No Shortcut"),
    .invoke = CVMenuLigatures,
    .mid = MID_Ligatures},
    .ti = {
      .text = (uint32_t *) N_("PointNumbers|_None"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'K'},
    .shortcut = H_ ("None|No Shortcut"),
    .invoke = CVMenuNumberPoints,
    .mid = MID_PtsNone},
    .ti = {
      .text = (uint32_t *) N_("TrueType"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'A'},
    .shortcut = H_ ("TrueType|No Shortcut"),
    .invoke = CVMenuNumberPoints,
    .mid = MID_PtsTrue},
    .ti = {
      .text = (uint32_t *) N_("PostScript®"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'L'},
    .shortcut = H_ ("PostScript|No Shortcut"),
    .invoke = CVMenuNumberPoints,
    .mid = MID_PtsPost},
    .ti = {
      .text = (uint32_t *) N_("SVG"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'L'},
    .shortcut = H_ ("SVG|No Shortcut"),
    .invoke = CVMenuNumberPoints,
    .mid = MID_PtsSVG},
    .ti = {
      .text = (uint32_t *) N_("Show _Grid Fit..."),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .shortcut = H_ ("Show Grid Fit...|No Shortcut"),
    .invoke = CVMenuShowGridFit,
    .mid = MID_ShowGridFit},
    .ti = {
      .text = (uint32_t *) N_("_Bigger Point Size"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'B'},
    .shortcut = H_ ("Bigger Point Size|Ctl+Shft++"),
    .invoke = CVMenuChangePointSize,
    .mid = MID_Bigger},
    .ti = {
      .text = (uint32_t *) N_("_Smaller Point Size"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'},
    .shortcut = H_ ("Smaller Point Size|Ctl+-"),
    .invoke = CVMenuChangePointSize,
    .mid = MID_Smaller},
    .ti = {
      .text = (uint32_t *) N_("_Anti Alias"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'L'},
    .shortcut = H_ ("Grid Fit Anti Alias|No Shortcut"),
    .invoke = CVMenuChangePointSize,
    .mid = MID_GridFitAA},
    .ti = {
      .text = (uint32_t *) N_("_Off"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'S'},
    .shortcut = H_ ("Grid Fit Off|No Shortcut"),
    .invoke = CVMenuChangePointSize,
    .mid = MID_GridFitOff},
    .ti = {
      .text = (uint32_t *) N_("_Points"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .shortcut = H_ ("Points|Ctl+D"),
    .invoke = CVMenuShowHide,
    .mid = MID_HidePoints},
    .ti = {
      .text = (uint32_t *) N_("_Control Point Info"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Control Point Info|No Shortcut"),
    .invoke = CVMenuShowCPInfo,
    .mid = MID_ShowCPInfo},
    .ti = {
      .text = (uint32_t *) N_("_Extrema"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Extrema|No Shortcut"),
    .invoke = CVMenuMarkExtrema,
    .mid = MID_MarkExtrema},
    .ti = {
      .text = (uint32_t *) N_("Points of _Inflection"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Points of Inflection|No Shortcut"),
    .invoke = CVMenuMarkPointsOfInflection,
    .mid = MID_MarkPointsOfInflection},
    .ti = {
      .text = (uint32_t *) N_("Almost Horizontal/Vertical Lines"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Almost Horizontal/Vertical Lines|No Shortcut"),
    .invoke = CVMenuShowAlmostHV,
    .mid = MID_ShowAlmostHV},
    .ti = {
      .text = (uint32_t *) N_("Almost Horizontal/Vertical Curves"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Almost Horizontal/Vertical Curves|No Shortcut"),
    .invoke = CVMenuShowAlmostHVCurves,
    .mid = MID_ShowAlmostHVCurves},
    .ti = {
      .text = (uint32_t *) N_("(Define \"Almost\")"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("(Define \"Almost\")|No Shortcut"),
    .invoke = CVMenuDefineAlmost,
    .mid = MID_DefineAlmost},
    .ti = {
      .text = (uint32_t *) N_("_Side Bearings"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Side Bearings|No Shortcut"),
    .invoke = CVMenuShowSideBearings,
    .mid = MID_ShowSideBearings},
    .ti = {
      .text = (uint32_t *) N_("Reference Names"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .shortcut = H_ ("Reference Names|No Shortcut"),
    .invoke = CVMenuShowRefNames,
    .mid = MID_ShowRefNames},
    .ti = {
      .text = (uint32_t *) N_("_Fill"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .shortcut = H_ ("Fill|No Shortcut"),
    .invoke = CVMenuFill,
    .mid = MID_Fill},
    .ti = {
      .text = (uint32_t *) N_("Previe_w"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .shortcut = H_ ("Preview|Ctl+`"),
    .invoke = CVMenuPreview,
    .mid = MID_Preview},
    .ti = {
      .text = (uint32_t *) N_("Pale_ttes"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .sub = pllist,
    .moveto = pllistcheck,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("_Glyph Tabs"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Glyph Tabs|No Shortcut"),
    .invoke = CVMenuShowTabs,
    .mid = MID_ShowTabs},
    .ti = {
      .text = (uint32_t *) N_("_Rulers"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Rulers|No Shortcut"),
    .invoke = CVMenuShowHideRulers,
    .mid = MID_HideRulers},
    .ti = {
      .text = (uint32_t *) N_("_Horizontal Hints"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Horizontal Hints|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowHHints},
    .ti = {
      .text = (uint32_t *) N_("_Vertical Hints"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Vertical Hints|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowVHints},
    .ti = {
      .text = (uint32_t *) N_("_Diagonal Hints"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Diagonal Hints|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowDHints},
    .ti = {
      .text = (uint32_t *) N_("_BlueValues"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("BlueValues|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowBlueValues},
    .ti = {
      .text = (uint32_t *) N_("FamilyBl_ues"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Family Blues|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowFamilyBlues},
    .ti = {
      .text = (uint32_t *) N_("_Anchors"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Anchors|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowAnchors},
    .ti = {
      .text = (uint32_t *) N_("Debug Raster Cha_nges"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Debug Raster Changes|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowDebugChanges},
    .ti = {
      .text = (uint32_t *) N_("Hori_zontal Metric Lines"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Hori_zontal Metric Lines|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowHMetrics},
    .ti = {
      .text = (uint32_t *) N_("Vertical _Metric Lines"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Vertical Metric Lines|No Shortcut"),
    .invoke = CVMenuShowHints,
    .mid = MID_ShowVMetrics},
    .ti = {
      .text = (uint32_t *) N_("Snap Outlines to Pi_xel Grid"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'R'},
    .shortcut = H_ ("Snap Outlines to Pixel Grid|No Shortcut"),
    .invoke = CVMenuSnapOutlines,
    .mid = MID_SnapOutlines},
    .ti = {
      .text = (uint32_t *) N_("_Fit"),
      .image = (GImage *)"viewfit.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'},
    .shortcut = H_ ("Fit|Ctl+F"),
    .invoke = CVMenuScale,
    .mid = MID_Fit},
    .ti = {
      .text = (uint32_t *) N_("Z_oom out"),
      .image = (GImage *)"viewzoomout.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .shortcut = H_ ("Zoom out|Alt+Ctl+-"),
    .invoke = CVMenuScale,
    .mid = MID_ZoomOut},
    .ti = {
      .text = (uint32_t *) N_("Zoom _in"),
      .image = (GImage *)"viewzoomin.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'i'},
    .shortcut = H_ ("Zoom in|Alt+Ctl+Shft++"),
    .invoke = CVMenuScale,
    .mid = MID_ZoomIn},
    .ti = {
      .text = (uint32_t *) N_("_Next Glyph"),
      .image = (GImage *)"viewnext.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'N'},
    .shortcut = H_ ("Next Glyph|Ctl+]"),
    .invoke = CVMenuChangeChar,
    .mid = MID_Next},
    .ti = {
      .text = (uint32_t *) N_("_Prev Glyph"),
      .image = (GImage *)"viewprev.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .shortcut = H_ ("Prev Glyph|Ctl+["),
    .invoke = CVMenuChangeChar,
    .mid = MID_Prev},
    .ti = {
      .text = (uint32_t *) N_("Next _Defined Glyph"),
      .image = (GImage *)"viewnextdef.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'D'},
    .shortcut = H_ ("Next Defined Glyph|Alt+Ctl+]"),
    .invoke = CVMenuChangeChar,
    .mid = MID_NextDef},
    .ti = {
      .text = (uint32_t *) N_("Prev Defined Gl_yph"),
      .image = (GImage *)"viewprevdef.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'a'},
    .shortcut = H_ ("Prev Defined Glyph|Alt+Ctl+["),
    .invoke = CVMenuChangeChar,
    .mid = MID_PrevDef},
    .ti = {
      .text = (uint32_t *) N_("Form_er Glyph"),
      .image = (GImage *)"viewformer.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'a'},
    .shortcut = H_ ("Former Glyph|Ctl+Shft+<"),
    .invoke = CVMenuChangeChar,
    .mid = MID_Former},
    .ti = {
      .text = (uint32_t *) N_("_Goto"),
      .image = (GImage *)"viewgoto.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'G'},
    .shortcut = H_ ("Goto|Ctl+Shft+>"),
    .invoke = CVMenuGotoChar,
    .mid = MID_Goto},
    .ti = {
      .text = (uint32_t *) N_("Find In Font _View"),
      .image = (GImage *) "viewfindinfont.png",
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .shortcut = H_ ("Find In Font View|Ctl+Shft+<"),
    .invoke = CVMenuFindInFontView,
    .mid = MID_FindInFontView},
    .ti = {
      .text = (uint32_t *) N_("N_umber Points"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'o'},
    .sub = nplist,
    .moveto = nplistcheck,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Grid Fi_t"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = gflist,
    .moveto = gflistcheck,
    .mid = MID_ShowGridFit},
    .ti = {
      .text = (uint32_t *) N_("Sho_w"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = swlist,
    .moveto = swlistcheck,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("Com_binations"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .checkable = 0,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'b'},
    .sub = cblist,
    .moveto = cblistcheck,
    .mid = 0},
    .ti = {
      .text = (uint32_t *) N_("SubFonts|_All"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .userdata = (void *) 0xffffffff,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("All|No Shortcut"),
    .invoke = CVMenuShowMMMask,
    .mid = MID_MMAll
    .ti = {
      .text = (uint32_t *) N_("SubFonts|_None"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("None|No Shortcut"),
    .invoke = CVMenuShowMMMask,
    .mid = MID_MMNone
    .ti = {
      .text = (uint32_t *) N_("MM _Reblend"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .shortcut = H_ ("MM Reblend|No Shortcut"),
    .invoke = CVMenuReblend,
    .mid = MID_MMReblend
    .ti = {
      .text = (uint32_t *) N_("_View"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .sub = mvlist,
    .moveto = mvlistcheck,
    .mid = 0
    .ti = {
      .text = (uint32_t *) N_("_File"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'},
    .sub = fllist,
    .moveto = fllistcheck
    .ti = {
      .text = (uint32_t *) N_("_Edit"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'E'},
    .sub = edlist,
    .moveto = edlistcheck
    .ti = {
      .text = (uint32_t *) N_("_Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .sub = ptlist,
    .moveto = ptlistcheck
    .ti = {
      .text = (uint32_t *) N_("E_lement"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = ellist,
    .moveto = ellistcheck
    .ti = {
      .text = (uint32_t *) N_("_Tools"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = NULL,
    .moveto = cv_tools_list_check
    .ti = {
      .text = (uint32_t *) N_("H_ints"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .sub = htlist,
    .moveto = htlistcheck
    .ti = {
      .text = (uint32_t *) N_("_View"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .sub = vwlist,
    .moveto = vwlistcheck
    .ti = {
      .text = (uint32_t *) N_("_Metrics"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .sub = mtlist,
    .moveto = mtlistcheck
    .ti = {
      .text = (uint32_t *) N_("MM"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = '\0'
    .sub = mmlist,
    .moveto = mmlistcheck
    .ti = {
      .text = (uint32_t *) N_("_Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'W'
    .sub = wnmenu,
    .moveto = CVWindowMenuBuild
    .ti = {
      .text = (uint32_t *) N_("_Help"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .sub = helplist
    .ti = {
      .text = (uint32_t *) N_("_File"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'F'},
    .sub = fllist,
    .moveto = fllistcheck
    .ti = {
      .text = (uint32_t *) N_("_Edit"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'E'},
    .sub = edlist,
    .moveto = edlistcheck,
    .ti = {
      .text = (uint32_t *) N_("_Point"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'P'},
    .sub = ptlist,
    .moveto = ptlistcheck,
    .ti = {
      .text = (uint32_t *) N_("E_lement"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = ellist,
    .moveto = ellistcheck,
    .ti = {
      .text = (uint32_t *) N_("_Tools"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .disabled = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'l'},
    .sub = NULL,
    .moveto = cv_tools_list_check,
    .ti = {
      .text = (uint32_t *) N_("H_ints"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .sub = htlist,
    .moveto = htlistcheck,
    .ti = {
      .text = (uint32_t *) N_("_View"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'V'},
    .sub = vwlist,
    .moveto = vwlistcheck,
    .ti = {
      .text = (uint32_t *) N_("_Metrics"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'M'},
    .sub = mtlist,
    .moveto = mtlistcheck,
    .ti = {
      .text = (uint32_t *) N_("_Window"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'W'},
    .sub = wnmenu,
    .moveto = CVWindowMenuBuild,
    .ti = {
      .text = (uint32_t *) N_("_Help"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = 1,
      .text_is_1byte = 1,
      .text_has_mnemonic = 1,
      .mnemonic = 'H'},
    .sub = helplist,
