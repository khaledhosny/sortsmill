    .ti = {
      .text = (uint32_t *) NC_("Select problems", "Errors"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuSelect,
    .mid = MID_SelectErrors },
    .ti = {
      .text = (uint32_t *) NC_("Select problems", "Open Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuSelect,
    .mid = MID_SelectOpen },
    .ti = {
      .text = (uint32_t *) NC_("Select problems", "Bad Direction"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuSelect,
    .mid = MID_SelectDir },
    .ti = {
      .text = (uint32_t *) NC_("Select problems", "Self Intersections"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuSelect,
    .mid = MID_SelectRO },
    .ti = {
      .text = (uint32_t *) NC_("Select problems", "Missing Extrema"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuSelect,
    .mid = MID_SelectExtr },
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Open Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuManyConnect
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Self Intersections"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuManyOverlap
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Mark for Overlap fix before Save"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuManyMark
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Bad Directions"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuManyCorrectDir
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Missing Extrema (cautiously)"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true,
    .invoke = VWMenuManyGoodExtrema
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Missing Extrema"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuManyAllExtrema
    .ti = {
      .text = (uint32_t *) NC_("Fixup problems", "Too Many Points"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuManySimplify
    .ti = {
      .text = (uint32_t *) N_("Close Open Contours"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuConnect
    .ti = {
      .text = (uint32_t *) N_("Inline All References"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuInlineRefs
    .ti = {
      .text = (uint32_t *) N_("Remove Overlap"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuOverlap
    .ti = {
      .text = (uint32_t *) N_("Mark for Overlap fix before Save"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuMark
    .ti = {
      .text = (uint32_t *) N_("Inline Flipped References"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuInlineFlippedRefs
    .ti = {
      .text = (uint32_t *) N_("Correct Direction"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuCorrectDir
    .ti = {
      .text = (uint32_t *) N_("Add Good Extrema"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuGoodExtrema
    .ti = {
      .text = (uint32_t *) N_("Add All Extrema"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuAllExtrema
    .ti = {
      .text = (uint32_t *) N_("Simplify"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .image_precedes = true,
      .line = true,
      .text_is_1byte = true
    .invoke = VWMenuSimplify
    .ti = {
      .text = (uint32_t *) N_("Revalidate All"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuRevalidateAll
    .ti = {
      .text = (uint32_t *) N_("Revalidate"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuRevalidate
    .ti = {
      .text = (uint32_t *) N_("Open Glyph"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true,
    .invoke = VWMenuOpenGlyph
    .ti = {
      .text = (uint32_t *) N_("Scroll To Glyph"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .invoke = VWMenuGotoGlyph
    .ti = {
      .text = (uint32_t *) N_("Select Glyphs With"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .sub = vw_subselect
    .ti = {
      .text = (uint32_t *) N_("Try To Fix Glyphs With"),
      .fg = COLOR_DEFAULT,
      .bg = COLOR_DEFAULT,
      .line = true
    .sub = vw_subfixup
