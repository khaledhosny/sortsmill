;; -*- mode: scheme; geiser-scheme-implementation: guile; coding: utf-8 -*-

(<baseviews.h>
 <fontforge.h>)

(
 (struct "struct altuni" "AltUni"
         (fields ((* AltUni) next)
                 (int unienc unicode)
                 (int vs variation_selector)
                 (int fid)))

 (struct IPoint
         (fields (int x)
                 (int y)))

 (struct BasePoint
         (fields (float x)
                 (float y)))

 (struct DBasePoint
         (fields (float x)
                 (float y)))

 (struct TPoint
         (fields (float x)
                 (float y)
                 (float t)))

 (struct IBounds
         (fields (int minx x_min)
                 (int maxx x_max)
                 (int miny y_min)
                 (int maxy y_max)))

 (struct DBounds
         (fields (float minx x_min)
                 (float maxx x_max)
                 (float miny y_min)
                 (float maxy y_max)))

 (struct SplinePoint
         (fields ((struct BasePoint) me this_cp)
                 ((struct BasePoint) nextcp next_cp)
                 ((struct BasePoint) prevcp previous_cp)
                 (bool nonextcp no_next_cp)
                 (bool noprevcp no_previous_cp)
                 (bool nextcpdef next_cp_default)
                 (bool prevcpdef previous_cp_default)
                 (bool selected)
                 (uint pointtype)
                 (bool isintersection is_intersection)
                 (bool flexy flex_y)
                 (bool flexx flex_x)
                 (bool roundx round_x)
                 (bool roundy round_y)
                 (bool dontinterpolate do_not_interpolate)
                 (bool ticked)
                 (bool watched)
                 (uint ptindex pt_index)
                 (uint ttfindex ttf_index)
                 (uint nextcpindex next_cp_index)
                 (* next)
                 (* prev previous)
                 (* hintmask hint_mask)))

 (struct SplinePointList       ; Use this to represent SplineSet, too.
         (fields ((* SplinePoint) first)
                 ((* SplinePoint) last)
                 ((* SplinePointList) next)
                 (* spiros)
                 (uint spiro_cnt spiro_count)
                 (uint spiro_max)
                 (uint ticked)
                 (uint beziers_need_optimizer)
                 (uint is_clip_path)
                 (* contour_name)))

 (struct DeviceTable
         (fields (uint first_pixel_size)
                 (uint last_pixel_size)
                 (* corrections)))

 (struct LookupSubtable
         (fields (* subtable_name name)
                 ((* OTLookup) lookup)
                 ((* LookupSubtable) next)
                 ;; There are many more fields.
                 ))

 (struct OTLookup
         (fields (* lookup_name name)
                 (int lookup_type type)
                 ((* OTLookup) next)
                 ;; There are many more fields.
                 ))

 (struct AnchorClass
         (fields (* name)
                 ((* LookupSubtable) subtable)
                 (bool has_base)
                 (bool processed)
                 (bool has_mark)
                 (bool matches)
                 (uint ac_num)
                 (bool ticked)
                 ((* AnchorClass) next)))

 (struct AnchorPoint
         (fields ((* AnchorClass) anchor anchor_class)
                 ((struct BasePoint) me coords)
                 ((struct DeviceTable) xadjust)
                 ((struct DeviceTable) yadjust)
                 (uint type)
                 (bool selected)
                 (bool ticked)
                 (bool has_ttf_pt has_ttf_point)
                 (uint ttf_pt_index ttf_point_index)
                 (int lig_index)
                 ((* AnchorPoint) next)))

 (struct Layer
         (fields (bool background)
                 (bool order2)
                 (bool anyflexes any_flexes)
                 (bool dofill do_fill)
                 (bool dostroke do_stroke)
                 (bool fillfirst fill_first)
                 (struct fill_brush)
                 (struct stroke_pen)
                 (* splines)
                 (* images)
                 (* refs)
                 (* undoes)
                 (* redoes)
                 (uint validation_state)
                 (uint old_vs old_validation_state)))

 (struct Encoding
         (fields (* enc_name encoding_name)
                 (int char_cnt char_count)
                 (* unicode)
                 (* psnames postscript_names)
                 (bool builtin)
                 (bool hidden)
                 (bool only_1byte)
                 (bool has_1byte)
                 (bool has_2byte)
                 (bool is_unicodebmp is_unicode_bmp)
                 (bool is_unicodefull is_unicode_full)
                 (bool is_custom)
                 (bool is_original)
                 (bool is_compact)
                 (bool is_japanese)
                 (bool is_korean)
                 (bool is_tradchinese is_trad_chinese)
                 (bool is_simplechinese is_simple_chinese)
                 (array iso_2022_escape)
                 (int iso_2022_escape_len iso_2022_escape_length)
                 (int low_page)
                 (int high_page)
                 (* iconv_name)
                 (* tounicode to_unicode)
                 (* fromunicode from_unicode)
                 (* tounicode_func to_unicode_func)
                 (* fromunicode_func from_unicode_func)
                 (bool is_temporary)
                 (int char_max)
                 ((* Encoding) next)))

(struct EncMap
         (fields
          (SCM _enc_to_gid encoding_to_gid)
          (SCM _gid_to_enc gid_to_encoding)
          (int enc_limit encoding_limit)
          (* remap)
          ((* Encoding) enc encoding)
          (bool ticked)))

 (struct ViewBase
         (fields (int tag)))

 (struct CharViewBase
         (fields (int tag)
                 ((* CharViewBase) next)
                 ((* FontViewBase) fv)
                 ((* SplineChar) sc)
                 (array layerheads layer_heads)
                 (uint drawmode draw_mode)
                 (uint ft_gridfitwidth ft_grid_fit_width)
                 (* gridfit grid_fit)
                 (* container)))

 (struct FontViewBase
         (fields (int tag)
                 ((* FontViewBase) next)
                 ((* FontViewBase) nextsame next_same)
                 ((* EncMap) map)
                 ((* EncMap) normal normal_map)
                 ((* SplineFont) sf)
                 ((* SplineFont) cidmaster cid_master)
                 (* active_bitmap)
                 (* selected)
                 (* container)
                 (int active_layer)))

  (struct SplineChar
         (fields

          ;; FIXME: Include special support for null-terminated
          ;; strings. For instance:
          ;;
          ;;    ((* string) name)
          ;;    ((* u32string) unicode_text)
          ;;
          (* name)

          (int unicodeenc unicode)
          (int orig_pos orig_index)
          (int width width)
          (int vwidth vwidth)
          ((* Layer) layers)
          (int layer_cnt layer_count)
          (* hstem)
          (* vstem)
          (* dstem)
          (* views)
          (* charinfo)
          ((* SplineFont) parent)

          (bool changed)
          (bool changedsincelasthinted changed_since_last_hinted)
          (bool manualhints not_autohintable)
          (bool ticked)
          (bool changed_since_autosave)
          (bool widthset width_is_set)
          (bool vconflicts vstem_hints_overlap)
          (bool hconflicts hstem_hints_overlap)
          (bool searcherdummy is_searcher_dummy)
          (bool changed_since_search)
          (bool wasopen was_open)
          (bool namechanged name_is_changed)
          (bool blended)
          (bool ticked2)
          (bool numberpointsbackards number_points_backwards)
          (bool instructions_out_of_date)
          (bool complained_about_ptnums)
          (bool vs_open)
          (bool unlink_rm_ovrlp_generate_undo)
          (bool inspiro in_spiro)
          (bool lig_caret_cnt_fixed)

          (uint glyph_class)
          (* dependents)
          (* kerns)
          (* vkerns)
          (* ligofme lig_of_me)
          (* comment)
          (uint color)
          ((* AnchorPoint) anchor anchor_points)
          (* ttf_instrs)
          (int ttf_instrs_len ttf_instrs_length)
          (int countermask_cnt countermask_count)
          (* countermasks)
          ((* AltUni) altuni)

          ;; Mathematics and TeX.
          (int tex_height)
          (int tex_depth)
          (bool is_extended_shape)
          (int italic_correction)
          (int top_accent_horiz top_accent_horizontal)
          (* italic_adjusts italic_adjustments)
          (* top_accent_adjusts top_accent_adjustments)
          (* vert_variants vertical_variants)
          (* horiz_variants horizontal_variants)
          (* mathkern)

          ;; Python.
          (* python_sc_object)
          (* python_temporary)
          (* python_persistent)

          ;; Tiling.
          (float tile_margin)
          ((struct DBounds) tile_bounds)

          ;; Fields that are used only during certain I/O operations.
          (int lsidebearing)
          (int ttf_glyph)
          ))

 (struct SplineFont
         (fields (* fontname font_name)
                 (* fullname full_name)
                 (* familyname family_name)
                 (* weight)
                 (* version)
                 (* copyright)
                 (* filename file_name)
                 (* defbasefilename default_base_file_name)
                 ((* FontViewBase) fv)
                 ((* AnchorClass) anchor anchor_classes)
                 ;; There are many more fields.
                 ))
 )
