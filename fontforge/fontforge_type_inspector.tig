;; -*- mode: bee -*-

(<baseviews.h>
 <fontforge.h>)

(
 (struct FontViewBase
    (fields
       (* next)
       (* nextsame next_same)
       (* map)
       (* normal normal_map)
       (* sf)
       (* cidmaster cid_master)
       (* active_bitmap)
       (* selected)
       (* container)
       (int active_layer)
       ))

 (struct CharViewBase
    (fields
       (* next)
       (* fv)
       (* sc)
       (array layerheads layer_heads)
       (uint drawmode draw_mode)
       (uint ft_gridfitwidth ft_grid_fit_width)
       (* gridfit grid_fit)
       (* container)
       ))

 (struct SplineChar
    (fields

       ;; FIXME: Include special support for null-terminated
       ;; strings. For instance:
       ;;
       ;;    ((* string) name)
       ;;    ((* u32string) unicode_text)
       ;;
       (* name)

       (int unicodeenc unicode)
       (int orig_pos orig_index)
       (int width width)
       (int vwidth vwidth)
       (* layers)
       (int layer_cnt layer_count)
       (* hstem)
       (* vstem)
       (* dstem)
       (* views)
       (* charinfo)
(* parent);;       ((* SplineFont) parent)

       (bool changed)
       (bool changedsincelasthinted changed_since_last_hinted)
       (bool manualhints not_autohintable)
       (bool ticked)
       (bool changed_since_autosave)
       (bool widthset width_is_set)
       (bool vconflicts vstem_hints_overlap)
       (bool hconflicts hstem_hints_overlap)
       (bool searcherdummy is_searcher_dummy)
       (bool changed_since_search)
       (bool wasopen was_open)
       (bool namechanged name_is_changed)
       (bool blended)
       (bool ticked2)
       (bool numberpointsbackards number_points_backwards)
       (bool instructions_out_of_date)
       (bool complained_about_ptnums)
       (bool vs_open)
       (bool unlink_rm_ovrlp_save_undo)
       (bool inspiro in_spiro)
       (bool lig_caret_cnt_fixed)

       (uint glyph_class)
       (* dependents)
       (* kerns)
       (* vkerns)
       (* ligofme lig_of_me)
       (* comment)
       (uint color)
       (* anchor)
       (* ttf_instrs)
       (int ttf_instrs_len ttf_instrs_length)
       (int countermask_cnt countermask_count)
       (* countermasks)
       (* altuni)

       ;; Mathematics and TeX.
       (int tex_height)
       (int tex_depth)
       (bool is_extended_shape)
       (int italic_correction)
       (int top_accent_horiz top_accent_horizontal)
       (* italic_adjusts italic_adjustments)
       (* top_accent_adjusts top_accent_adjustments)
       (* vert_variants vertical_variants)
       (* horiz_variants horizontal_variants)
       (* mathkern)

       ;; Python.
       (* python_sc_object)
       (* python_temporary)
       (* python_persistent)

       ;; Tiling.
       (float tile_margin)
       (struct tile_bounds)

       ;; Fields that are used only during certain I/O operations.
       (int lsidebearing)
       (int ttf_glyph)
       ))

 (struct SplineFont
    (fields
       (* fontname font_name)
       (* fullname full_name)
       (* familyname family_name)
       (* weight)
       (* version)
       (* copyright)
       (* filename file_name)
       (* defbasefilename default_base_file_name)
       ))
)
